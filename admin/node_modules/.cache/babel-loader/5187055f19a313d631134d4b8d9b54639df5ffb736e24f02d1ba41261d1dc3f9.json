{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_date_picker = _resolveComponent(\"a-date-picker\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.handleQuery())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"刷新\")]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\"<a-button type=\\\"primary\\\" @click=\\\"onAdd\\\">新增</a-button>\")]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: _ctx.skTokens,\n    columns: _ctx.columns,\n    pagination: _ctx.pagination,\n    onChange: _ctx.handleTableChange,\n    loading: _ctx.loading\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createBlock(_component_a_space, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\"<a-popconfirm\"), _createCommentVNode(\"    title=\\\"删除后不可恢复，确认删除?\\\"\"), _createCommentVNode(\"    @confirm=\\\"onDelete(record)\\\"\"), _createCommentVNode(\"    ok-text=\\\"确认\\\" cancel-text=\\\"取消\\\">\"), _createCommentVNode(\"  <a style=\\\"color: red\\\">删除</a>\"), _createCommentVNode(\"</a-popconfirm>\"), _createElementVNode(\"a\", {\n        onClick: $event => _ctx.onEdit(record)\n      }, \"修改令牌余量\", 8 /* PROPS */, _hoisted_1)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\", \"pagination\", \"onChange\", \"loading\"]), _createVNode(_component_a_modal, {\n    visible: _ctx.visible,\n    \"onUpdate:visible\": _cache[4] || (_cache[4] = $event => _ctx.visible = $event),\n    title: \"秒杀令牌\",\n    onOk: _ctx.handleOk,\n    \"ok-text\": \"确认\",\n    \"cancel-text\": \"取消\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      model: _ctx.skToken,\n      \"label-col\": {\n        span: 4\n      },\n      \"wrapper-col\": {\n        span: 20\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"日期\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_date_picker, {\n          value: _ctx.skToken.date,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.skToken.date = $event),\n          valueFormat: \"YYYY-MM-DD\",\n          placeholder: \"请选择日期\",\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"车次编号\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.skToken.trainCode,\n          \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.skToken.trainCode = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"令牌余量\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.skToken.count,\n          \"onUpdate:value\": _cache[3] || (_cache[3] = $event => _ctx.skToken.count = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onOk\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;;;;;;6DACEA,oBAKI,YAJFC,aAGUC;sBAFR,MAA6D,CAA7DD,aAA6DE;MAAnDC,IAAI,EAAC,SAAS;MAAEC,OAAK,sCAAEC,gBAAW;;wBAAI,MAAE,kBAAF,IAAE;;QAClDC,gFAA4D;;QAGhEN,aAkBUO;IAlBAC,UAAU,EAAEH,aAAQ;IACpBI,OAAO,EAAEJ,YAAO;IAChBK,UAAU,EAAEL,eAAU;IACtBM,QAAM,EAAEN,sBAAiB;IACzBO,OAAO,EAAEP;;IACNQ,QAAQ,WACjB,CAUW;MAXUC,MAAM;MAAEC;IAAM,OACnBD,MAAM,CAACE,SAAS,kCAC9BC,aAQUhB;MAAAiB;IAAA;wBAPR,MAAoB,CAApBZ,oCAAoB,EACpBA,kDAAgC,EAChCA,wDAAsC,EACtCA,6DAAyC,EACzCA,uDAAqC,EACrCA,sCAAsB,EACtBP,oBAAqC;QAAjCK,OAAK,YAAEC,WAAM,CAACU,MAAM;SAAG,QAAM;;;;qFAKzCf,aAaUmB;IAbOC,OAAO,EAAEf,YAAO;4DAAPA,YAAO;IAAEgB,KAAK,EAAC,MAAM;IAAEC,IAAE,EAAEjB,aAAQ;IACpD,SAAO,EAAC,IAAI;IAAC,aAAW,EAAC;;sBAChC,MAUS,CAVTL,aAUSuB;MAVAC,KAAK,EAAEnB,YAAO;MAAG,WAAS,EAAE;QAAAoB;MAAA,CAAS;MAAG,aAAW,EAAE;QAAAA;MAAA;;wBAC5D,MAEc,CAFdzB,aAEc0B;QAFDC,KAAK,EAAC;MAAI;0BACrB,MAAmG,CAAnG3B,aAAmG4B;UAA5EC,KAAK,EAAExB,YAAO,CAACyB,IAAI;gEAAZzB,YAAO,CAACyB,IAAI;UAAEC,WAAW,EAAC,YAAY;UAACC,WAAW,EAAC,OAAO;UAACC,QAAQ,EAAR;;;UAE3FjC,aAEc0B;QAFDC,KAAK,EAAC;MAAM;0BACvB,MAAqD,CAArD3B,aAAqDkC;UAApCL,KAAK,EAAExB,YAAO,CAAC8B,SAAS;gEAAjB9B,YAAO,CAAC8B,SAAS;UAAEF,QAAQ,EAAR;;;UAE7CjC,aAEc0B;QAFDC,KAAK,EAAC;MAAM;0BACvB,MAAyC,CAAzC3B,aAAyCkC;UAAxBL,KAAK,EAAExB,YAAO,CAAC+B,KAAK;gEAAb/B,YAAO,CAAC+B,KAAK","names":["_createElementVNode","_createVNode","_component_a_space","_component_a_button","type","onClick","_ctx","_createCommentVNode","_component_a_table","dataSource","columns","pagination","onChange","loading","bodyCell","column","record","dataIndex","_createBlock","key","_component_a_modal","visible","title","onOk","_component_a_form","model","span","_component_a_form_item","label","_component_a_date_picker","value","date","valueFormat","placeholder","disabled","_component_a_input","trainCode","count"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\business\\sk-token.vue"],"sourcesContent":["<template>\n  <p>\n    <a-space>\n      <a-button type=\"primary\" @click=\"handleQuery()\">刷新</a-button>\n      <!--<a-button type=\"primary\" @click=\"onAdd\">新增</a-button>-->\n    </a-space>\n  </p>\n  <a-table :dataSource=\"skTokens\"\n           :columns=\"columns\"\n           :pagination=\"pagination\"\n           @change=\"handleTableChange\"\n           :loading=\"loading\">\n    <template #bodyCell=\"{ column, record }\">\n      <template v-if=\"column.dataIndex === 'operation'\">\n        <a-space>\n          <!--<a-popconfirm-->\n          <!--    title=\"删除后不可恢复，确认删除?\"-->\n          <!--    @confirm=\"onDelete(record)\"-->\n          <!--    ok-text=\"确认\" cancel-text=\"取消\">-->\n          <!--  <a style=\"color: red\">删除</a>-->\n          <!--</a-popconfirm>-->\n          <a @click=\"onEdit(record)\">修改令牌余量</a>\n        </a-space>\n      </template>\n    </template>\n  </a-table>\n  <a-modal v-model:visible=\"visible\" title=\"秒杀令牌\" @ok=\"handleOk\"\n           ok-text=\"确认\" cancel-text=\"取消\">\n    <a-form :model=\"skToken\" :label-col=\"{span: 4}\" :wrapper-col=\"{ span: 20 }\">\n      <a-form-item label=\"日期\">\n        <a-date-picker v-model:value=\"skToken.date\" valueFormat=\"YYYY-MM-DD\" placeholder=\"请选择日期\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"车次编号\">\n        <a-input v-model:value=\"skToken.trainCode\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"令牌余量\">\n        <a-input v-model:value=\"skToken.count\" />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from 'vue';\nimport {notification} from \"ant-design-vue\";\nimport axios from \"axios\";\n\nexport default defineComponent({\n  name: \"sk-token-view\",\n  setup() {\n    const visible = ref(false);\n    let skToken = ref({\n      id: undefined,\n      date: undefined,\n      trainCode: undefined,\n      count: undefined,\n      createTime: undefined,\n      updateTime: undefined,\n    });\n    const skTokens = ref([]);\n    // 分页的三个属性名是固定的\n    const pagination = ref({\n      total: 0,\n      current: 1,\n      pageSize: 10,\n    });\n    let loading = ref(false);\n    const columns = [\n    {\n      title: '日期',\n      dataIndex: 'date',\n      key: 'date',\n    },\n    {\n      title: '车次编号',\n      dataIndex: 'trainCode',\n      key: 'trainCode',\n    },\n    {\n      title: '令牌余量',\n      dataIndex: 'count',\n      key: 'count',\n    },\n    {\n      title: '操作',\n      dataIndex: 'operation'\n    }\n    ];\n\n    const onAdd = () => {\n      skToken.value = {};\n      visible.value = true;\n    };\n\n    const onEdit = (record) => {\n      skToken.value = window.Tool.copy(record);\n      visible.value = true;\n    };\n\n    const onDelete = (record) => {\n      axios.delete(\"/business/admin/sk-token/delete/\" + record.id).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"删除成功！\"});\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize,\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleOk = () => {\n      axios.post(\"/business/admin/sk-token/save\", skToken.value).then((response) => {\n        let data = response.data;\n        if (data.success) {\n          notification.success({description: \"保存成功！\"});\n          visible.value = false;\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleQuery = (param) => {\n      if (!param) {\n        param = {\n          page: 1,\n          size: pagination.value.pageSize\n        };\n      }\n      loading.value = true;\n      axios.get(\"/business/admin/sk-token/query-list\", {\n        params: {\n          page: param.page,\n          size: param.size\n        }\n      }).then((response) => {\n        loading.value = false;\n        let data = response.data;\n        if (data.success) {\n          skTokens.value = data.content.list;\n          // 设置分页控件的值\n          pagination.value.current = param.page;\n          pagination.value.total = data.content.total;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleTableChange = (page) => {\n      // console.log(\"看看自带的分页参数都有啥：\" + JSON.stringify(page));\n      pagination.value.pageSize = page.pageSize;\n      handleQuery({\n        page: page.current,\n        size: page.pageSize\n      });\n    };\n\n    onMounted(() => {\n      handleQuery({\n        page: 1,\n        size: pagination.value.pageSize\n      });\n    });\n\n    return {\n      skToken,\n      visible,\n      skTokens,\n      pagination,\n      columns,\n      handleTableChange,\n      handleQuery,\n      loading,\n      onAdd,\n      handleOk,\n      onEdit,\n      onDelete\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}