{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"a\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"删除\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"a\", null, \"生成座位\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_select_option = _resolveComponent(\"a-select-option\");\n  const _component_a_select = _resolveComponent(\"a-select\");\n  const _component_station_select_view = _resolveComponent(\"station-select-view\");\n  const _component_a_time_picker = _resolveComponent(\"a-time-picker\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.handleQuery())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"刷新\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _ctx.onAdd\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"新增\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: _ctx.trains,\n    columns: _ctx.columns,\n    pagination: _ctx.pagination,\n    onChange: _ctx.handleTableChange,\n    loading: _ctx.loading\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createBlock(_component_a_space, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_popconfirm, {\n        title: \"删除后不可恢复，确认删除?\",\n        onConfirm: $event => _ctx.onDelete(record),\n        \"ok-text\": \"确认\",\n        \"cancel-text\": \"取消\"\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), _createElementVNode(\"a\", {\n        onClick: $event => _ctx.onEdit(record)\n      }, \"编辑\", 8 /* PROPS */, _hoisted_2), _createVNode(_component_a_popconfirm, {\n        title: \"生成座位将删除已有记录，确认生成座位?\",\n        onConfirm: $event => _ctx.genSeat(record),\n        \"ok-text\": \"确认\",\n        \"cancel-text\": \"取消\"\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : column.dataIndex === 'type' ? (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 1\n    }, _renderList(_ctx.TRAIN_TYPE_ARRAY, item => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        key: item.code\n      }, [item.code === record.type ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(item.desc), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\", \"pagination\", \"onChange\", \"loading\"]), _createVNode(_component_a_modal, {\n    visible: _ctx.visible,\n    \"onUpdate:visible\": _cache[9] || (_cache[9] = $event => _ctx.visible = $event),\n    title: \"车次\",\n    onOk: _ctx.handleOk,\n    \"ok-text\": \"确认\",\n    \"cancel-text\": \"取消\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      model: _ctx.train,\n      \"label-col\": {\n        span: 4\n      },\n      \"wrapper-col\": {\n        span: 20\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"车次编号\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.train.code,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.train.code = $event),\n          disabled: !!_ctx.train.id\n        }, null, 8 /* PROPS */, [\"value\", \"disabled\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"车次类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_select, {\n          value: _ctx.train.type,\n          \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.train.type = $event)\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.TRAIN_TYPE_ARRAY, item => {\n            return _openBlock(), _createBlock(_component_a_select_option, {\n              key: item.code,\n              value: item.code\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.desc), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"始发站\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_station_select_view, {\n          modelValue: _ctx.train.start,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.train.start = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"始发站拼音\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.train.startPinyin,\n          \"onUpdate:value\": _cache[4] || (_cache[4] = $event => _ctx.train.startPinyin = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"出发时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_time_picker, {\n          value: _ctx.train.startTime,\n          \"onUpdate:value\": _cache[5] || (_cache[5] = $event => _ctx.train.startTime = $event),\n          valueFormat: \"HH:mm:ss\",\n          placeholder: \"请选择时间\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"终点站\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_station_select_view, {\n          modelValue: _ctx.train.end,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.train.end = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"终点站拼音\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.train.endPinyin,\n          \"onUpdate:value\": _cache[7] || (_cache[7] = $event => _ctx.train.endPinyin = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"到站时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_time_picker, {\n          value: _ctx.train.endTime,\n          \"onUpdate:value\": _cache[8] || (_cache[8] = $event => _ctx.train.endTime = $event),\n          valueFormat: \"HH:mm:ss\",\n          placeholder: \"请选择时间\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onOk\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","style","_createVNode","_component_a_space","_component_a_button","type","onClick","_ctx","_component_a_table","dataSource","columns","pagination","onChange","loading","bodyCell","column","record","dataIndex","_createBlock","key","_component_a_popconfirm","title","onConfirm","_hoisted_1","_hoisted_3","_createElementBlock","_Fragment","item","code","desc","_component_a_modal","visible","onOk","_component_a_form","model","span","_component_a_form_item","label","_component_a_input","value","disabled","id","_component_a_select","_component_a_select_option","_component_station_select_view","start","startPinyin","_component_a_time_picker","startTime","valueFormat","placeholder","end","endPinyin","endTime"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\base\\train.vue"],"sourcesContent":["<template>\n  <p>\n    <a-space>\n      <a-button type=\"primary\" @click=\"handleQuery()\">刷新</a-button>\n      <a-button type=\"primary\" @click=\"onAdd\">新增</a-button>\n    </a-space>\n  </p>\n  <a-table :dataSource=\"trains\"\n           :columns=\"columns\"\n           :pagination=\"pagination\"\n           @change=\"handleTableChange\"\n           :loading=\"loading\">\n    <template #bodyCell=\"{ column, record }\">\n      <template v-if=\"column.dataIndex === 'operation'\">\n        <a-space>\n          <a-popconfirm\n              title=\"删除后不可恢复，确认删除?\"\n              @confirm=\"onDelete(record)\"\n              ok-text=\"确认\" cancel-text=\"取消\">\n            <a style=\"color: red\">删除</a>\n          </a-popconfirm>\n          <a @click=\"onEdit(record)\">编辑</a>\n          <a-popconfirm\n              title=\"生成座位将删除已有记录，确认生成座位?\"\n              @confirm=\"genSeat(record)\"\n              ok-text=\"确认\" cancel-text=\"取消\">\n            <a>生成座位</a>\n          </a-popconfirm>\n        </a-space>\n      </template>\n      <template v-else-if=\"column.dataIndex === 'type'\">\n        <span v-for=\"item in TRAIN_TYPE_ARRAY\" :key=\"item.code\">\n          <span v-if=\"item.code === record.type\">\n            {{item.desc}}\n          </span>\n        </span>\n      </template>\n    </template>\n  </a-table>\n  <a-modal v-model:visible=\"visible\" title=\"车次\" @ok=\"handleOk\"\n           ok-text=\"确认\" cancel-text=\"取消\">\n    <a-form :model=\"train\" :label-col=\"{span: 4}\" :wrapper-col=\"{ span: 20 }\">\n      <a-form-item label=\"车次编号\">\n        <a-input v-model:value=\"train.code\" :disabled=\"!!train.id\"/>\n      </a-form-item>\n      <a-form-item label=\"车次类型\">\n        <a-select v-model:value=\"train.type\">\n          <a-select-option v-for=\"item in TRAIN_TYPE_ARRAY\" :key=\"item.code\" :value=\"item.code\">\n            {{item.desc}}\n          </a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item label=\"始发站\">\n        <station-select-view v-model=\"train.start\"></station-select-view>\n      </a-form-item>\n      <a-form-item label=\"始发站拼音\">\n        <a-input v-model:value=\"train.startPinyin\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"出发时间\">\n        <a-time-picker v-model:value=\"train.startTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" />\n      </a-form-item>\n      <a-form-item label=\"终点站\">\n        <station-select-view v-model=\"train.end\"></station-select-view>\n      </a-form-item>\n      <a-form-item label=\"终点站拼音\">\n        <a-input v-model:value=\"train.endPinyin\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"到站时间\">\n        <a-time-picker v-model:value=\"train.endTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted, watch } from 'vue';\nimport {notification} from \"ant-design-vue\";\nimport axios from \"axios\";\nimport {pinyin} from \"pinyin-pro\";\nimport StationSelectView from \"@/components/station-select\";\n\nexport default defineComponent({\n  name: \"train-view\",\n  components: {StationSelectView},\n  setup() {\n    const TRAIN_TYPE_ARRAY = window.TRAIN_TYPE_ARRAY;\n    const visible = ref(false);\n    let train = ref({\n      id: undefined,\n      code: undefined,\n      type: undefined,\n      start: undefined,\n      startPinyin: undefined,\n      startTime: undefined,\n      end: undefined,\n      endPinyin: undefined,\n      endTime: undefined,\n      createTime: undefined,\n      updateTime: undefined,\n    });\n    const trains = ref([]);\n    // 分页的三个属性名是固定的\n    const pagination = ref({\n      total: 0,\n      current: 1,\n      pageSize: 10,\n    });\n    let loading = ref(false);\n    const columns = [\n    {\n      title: '车次编号',\n      dataIndex: 'code',\n      key: 'code',\n    },\n    {\n      title: '车次类型',\n      dataIndex: 'type',\n      key: 'type',\n    },\n    {\n      title: '始发站',\n      dataIndex: 'start',\n      key: 'start',\n    },\n    {\n      title: '始发站拼音',\n      dataIndex: 'startPinyin',\n      key: 'startPinyin',\n    },\n    {\n      title: '出发时间',\n      dataIndex: 'startTime',\n      key: 'startTime',\n    },\n    {\n      title: '终点站',\n      dataIndex: 'end',\n      key: 'end',\n    },\n    {\n      title: '终点站拼音',\n      dataIndex: 'endPinyin',\n      key: 'endPinyin',\n    },\n    {\n      title: '到站时间',\n      dataIndex: 'endTime',\n      key: 'endTime',\n    },\n    {\n      title: '操作',\n      dataIndex: 'operation'\n    }\n    ];\n\n    watch(() => train.value.start, ()=>{\n      if (Tool.isNotEmpty(train.value.start)) {\n        train.value.startPinyin = pinyin(train.value.start, { toneType: 'none'}).replaceAll(\" \", \"\");\n      } else {\n        train.value.startPinyin = \"\";\n      }\n    }, {immediate: true});\n    watch(() => train.value.end, ()=>{\n      if (Tool.isNotEmpty(train.value.end)) {\n        train.value.endPinyin = pinyin(train.value.end, { toneType: 'none'}).replaceAll(\" \", \"\");\n      } else {\n        train.value.endPinyin = \"\";\n      }\n    }, {immediate: true});\n\n    const onAdd = () => {\n      train.value = {};\n      visible.value = true;\n    };\n\n    const onEdit = (record) => {\n      train.value = window.Tool.copy(record);\n      visible.value = true;\n    };\n\n    const onDelete = (record) => {\n      axios.delete(\"/business/admin/train/delete/\" + record.id).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"删除成功！\"});\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize,\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleOk = () => {\n      axios.post(\"/business/admin/train/save\", train.value).then((response) => {\n        let data = response.data;\n        if (data.success) {\n          notification.success({description: \"保存成功！\"});\n          visible.value = false;\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleQuery = (param) => {\n      if (!param) {\n        param = {\n          page: 1,\n          size: pagination.value.pageSize\n        };\n      }\n      loading.value = true;\n      axios.get(\"/business/admin/train/query-list\", {\n        params: {\n          page: param.page,\n          size: param.size\n        }\n      }).then((response) => {\n        loading.value = false;\n        let data = response.data;\n        if (data.success) {\n          trains.value = data.content.list;\n          // 设置分页控件的值\n          pagination.value.current = param.page;\n          pagination.value.total = data.content.total;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleTableChange = (pagination) => {\n      // console.log(\"看看自带的分页参数都有啥：\" + pagination);\n      handleQuery({\n        page: pagination.current,\n        size: pagination.pageSize\n      });\n    };\n\n    const genSeat = (record) => {\n      loading.value = true;\n      axios.get(\"/business/admin/train/gen-seat/\" + record.code).then((response) => {\n        loading.value = false;\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"生成成功！\"});\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    onMounted(() => {\n      handleQuery({\n        page: 1,\n        size: pagination.value.pageSize\n      });\n    });\n\n    return {\n      TRAIN_TYPE_ARRAY,\n      train,\n      visible,\n      trains,\n      pagination,\n      columns,\n      handleTableChange,\n      handleQuery,\n      loading,\n      onAdd,\n      handleOk,\n      onEdit,\n      onDelete,\n      genSeat\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}