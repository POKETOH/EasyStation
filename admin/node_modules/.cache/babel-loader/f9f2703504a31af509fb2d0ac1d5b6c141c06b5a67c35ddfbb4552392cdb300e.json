{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, normalizeStyle as _normalizeStyle } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_select_option = _resolveComponent(\"a-select-option\");\n  const _component_a_select = _resolveComponent(\"a-select\");\n  return _openBlock(), _createBlock(_component_a_select, {\n    value: _ctx.trainCode,\n    \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.trainCode = $event),\n    \"show-search\": \"\",\n    allowClear: \"\",\n    filterOption: _ctx.filterTrainCodeOption,\n    onChange: _ctx.onChange,\n    placeholder: \"请选择车次\",\n    style: _normalizeStyle('width: ' + _ctx._width)\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.trains, item => {\n      return _openBlock(), _createBlock(_component_a_select_option, {\n        key: item.code,\n        value: item.code,\n        label: item.code + item.start + item.end\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.code) + \" \" + _toDisplayString(item.start) + \" ~ \" + _toDisplayString(item.end), 1)]),\n        _: 2\n      }, 1032, [\"value\", \"label\"]);\n    }), 128))]),\n    _: 1\n  }, 8, [\"value\", \"filterOption\", \"onChange\", \"style\"]);\n}","map":{"version":3,"names":["_createBlock","_component_a_select","value","_ctx","trainCode","_cache","$event","allowClear","filterOption","filterTrainCodeOption","onChange","placeholder","style","_normalizeStyle","_width","default","_withCtx","_createElementBlock","_Fragment","_renderList","trains","item","_component_a_select_option","key","code","label","start","end","_createTextVNode","_toDisplayString","_"],"sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\components\\train-select.vue"],"sourcesContent":["<template>\r\n  <a-select v-model:value=\"trainCode\" show-search allowClear\r\n            :filterOption=\"filterTrainCodeOption\"\r\n            @change=\"onChange\" placeholder=\"请选择车次\"\r\n            :style=\"'width: ' + _width\">\r\n    <a-select-option v-for=\"item in trains\" :key=\"item.code\" :value=\"item.code\" :label=\"item.code + item.start + item.end\">\r\n      {{item.code}} {{item.start}} ~ {{item.end}}\r\n    </a-select-option>\r\n  </a-select>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {defineComponent, onMounted, ref, watch} from 'vue';\r\nimport axios from \"axios\";\r\nimport {notification} from \"ant-design-vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"train-select-view\",\r\n  props: [\"modelValue\", \"width\"],\r\n  emits: ['update:modelValue', 'change'],\r\n  setup(props, {emit}) {\r\n    const trainCode = ref();\r\n    const trains = ref([]);\r\n    const _width = ref(props.width);\r\n    if (Tool.isEmpty(props.width)) {\r\n      _width.value = \"100%\";\r\n    }\r\n\r\n    // 利用watch，动态获取父组件的值，如果放在onMounted或其它方法里，则只有第一次有效\r\n    watch(() => props.modelValue, ()=>{\r\n      console.log(\"props.modelValue\", props.modelValue);\r\n      trainCode.value = props.modelValue;\r\n    }, {immediate: true});\r\n\r\n    /**\r\n     * 查询所有的车次，用于车次下拉框\r\n     */\r\n    const queryAllTrain = () => {\r\n      axios.get(\"/business/admin/train/query-all\").then((response) => {\r\n        let data = response.data;\r\n        if (data.success) {\r\n          trains.value = data.content;\r\n        } else {\r\n          notification.error({description: data.message});\r\n        }\r\n      });\r\n    };\r\n\r\n    /**\r\n     * 车次下拉框筛选\r\n     */\r\n    const filterTrainCodeOption = (input, option) => {\r\n      console.log(input, option);\r\n      return option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\r\n    };\r\n\r\n    /**\r\n     * 将当前组件的值响应给父组件\r\n     * @param value\r\n     */\r\n    const onChange = (value) => {\r\n      emit('update:modelValue', value);\r\n      let train = trains.value.filter(item => item.code === value)[0];\r\n      if (Tool.isEmpty(train)) {\r\n        train = {};\r\n      }\r\n      emit('change', train);\r\n    };\r\n\r\n    onMounted(() => {\r\n      queryAllTrain();\r\n    });\r\n\r\n    return {\r\n      trainCode,\r\n      trains,\r\n      filterTrainCodeOption,\r\n      onChange,\r\n      _width\r\n    };\r\n  },\r\n});\r\n</script>\r\n"],"mappings":";;;;uBACEA,YAAA,CAOWC,mBAAA;IAPOC,KAAK,EAAEC,IAAA,CAAAC,SAAS;IADpC,kBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAC2BH,IAAA,CAAAC,SAAS,GAAAE,MAAA;IAAE,aAAW,EAAX,EAAW;IAACC,UAAU,EAAV,EAAU;IAC/CC,YAAY,EAAEL,IAAA,CAAAM,qBAAqB;IACnCC,QAAM,EAAEP,IAAA,CAAAO,QAAQ;IAAEC,WAAW,EAAC,OAAO;IACrCC,KAAK,EAJlBC,eAAA,aAIgCV,IAAA,CAAAW,MAAM;;IAJtCC,OAAA,EAAAC,QAAA,CAKqB,MAAsB,E,kBAAvCC,mBAAA,CAEkBC,SAAA,QAPtBC,WAAA,CAKoChB,IAAA,CAAAiB,MAAM,EAAdC,IAAI;2BAA5BrB,YAAA,CAEkBsB,0BAAA;QAFuBC,GAAG,EAAEF,IAAI,CAACG,IAAI;QAAGtB,KAAK,EAAEmB,IAAI,CAACG,IAAI;QAAGC,KAAK,EAAEJ,IAAI,CAACG,IAAI,GAAGH,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACM;;QALtHZ,OAAA,EAAAC,QAAA,CAMM,MAAa,CANnBY,gBAAA,CAAAC,gBAAA,CAMQR,IAAI,CAACG,IAAI,IAAE,GAAC,GAAAK,gBAAA,CAAER,IAAI,CAACK,KAAK,IAAE,KAAG,GAAAG,gBAAA,CAAER,IAAI,CAACM,GAAG,M;QAN/CG,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}