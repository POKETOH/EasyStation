{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"a\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"删除\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_date_picker = _resolveComponent(\"a-date-picker\");\n  const _component_train_select_view = _resolveComponent(\"train-select-view\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_time_picker = _resolveComponent(\"a-time-picker\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_a_date_picker, {\n      value: _ctx.params.date,\n      \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.params.date = $event),\n      valueFormat: \"YYYY-MM-DD\",\n      placeholder: \"请选择日期\"\n    }, null, 8 /* PROPS */, [\"value\"]), _createVNode(_component_train_select_view, {\n      modelValue: _ctx.params.trainCode,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.params.trainCode = $event),\n      width: \"200px\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _cache[2] || (_cache[2] = $event => _ctx.handleQuery())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"刷新\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _ctx.onAdd\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"新增\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: _ctx.dailyTrainStations,\n    columns: _ctx.columns,\n    pagination: _ctx.pagination,\n    onChange: _ctx.handleTableChange,\n    loading: _ctx.loading\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createBlock(_component_a_space, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_popconfirm, {\n        title: \"删除后不可恢复，确认删除?\",\n        onConfirm: $event => _ctx.onDelete(record),\n        \"ok-text\": \"确认\",\n        \"cancel-text\": \"取消\"\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), _createElementVNode(\"a\", {\n        onClick: $event => _ctx.onEdit(record)\n      }, \"编辑\", 8 /* PROPS */, _hoisted_2)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\", \"pagination\", \"onChange\", \"loading\"]), _createVNode(_component_a_modal, {\n    visible: _ctx.visible,\n    \"onUpdate:visible\": _cache[12] || (_cache[12] = $event => _ctx.visible = $event),\n    title: \"每日车站\",\n    onOk: _ctx.handleOk,\n    \"ok-text\": \"确认\",\n    \"cancel-text\": \"取消\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      model: _ctx.dailyTrainStation,\n      \"label-col\": {\n        span: 4\n      },\n      \"wrapper-col\": {\n        span: 20\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"日期\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_date_picker, {\n          value: _ctx.dailyTrainStation.date,\n          \"onUpdate:value\": _cache[3] || (_cache[3] = $event => _ctx.dailyTrainStation.date = $event),\n          valueFormat: \"YYYY-MM-DD\",\n          placeholder: \"请选择日期\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"车次编号\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_train_select_view, {\n          modelValue: _ctx.dailyTrainStation.trainCode,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.dailyTrainStation.trainCode = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站序\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.dailyTrainStation.index,\n          \"onUpdate:value\": _cache[5] || (_cache[5] = $event => _ctx.dailyTrainStation.index = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.dailyTrainStation.name,\n          \"onUpdate:value\": _cache[6] || (_cache[6] = $event => _ctx.dailyTrainStation.name = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站名拼音\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.dailyTrainStation.namePinyin,\n          \"onUpdate:value\": _cache[7] || (_cache[7] = $event => _ctx.dailyTrainStation.namePinyin = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"进站时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_time_picker, {\n          value: _ctx.dailyTrainStation.inTime,\n          \"onUpdate:value\": _cache[8] || (_cache[8] = $event => _ctx.dailyTrainStation.inTime = $event),\n          valueFormat: \"HH:mm:ss\",\n          placeholder: \"请选择时间\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"出站时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_time_picker, {\n          value: _ctx.dailyTrainStation.outTime,\n          \"onUpdate:value\": _cache[9] || (_cache[9] = $event => _ctx.dailyTrainStation.outTime = $event),\n          valueFormat: \"HH:mm:ss\",\n          placeholder: \"请选择时间\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"停站时长\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_time_picker, {\n          value: _ctx.dailyTrainStation.stopTime,\n          \"onUpdate:value\": _cache[10] || (_cache[10] = $event => _ctx.dailyTrainStation.stopTime = $event),\n          valueFormat: \"HH:mm:ss\",\n          placeholder: \"请选择时间\",\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"里程（公里）\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.dailyTrainStation.km,\n          \"onUpdate:value\": _cache[11] || (_cache[11] = $event => _ctx.dailyTrainStation.km = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onOk\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","style","_createVNode","_component_a_space","_component_a_date_picker","value","_ctx","date","valueFormat","placeholder","_component_train_select_view","trainCode","width","_component_a_button","type","onClick","_component_a_table","dataSource","columns","pagination","onChange","loading","bodyCell","column","record","dataIndex","_createBlock","key","_component_a_popconfirm","title","onConfirm","_hoisted_1","_component_a_modal","visible","onOk","_component_a_form","model","span","_component_a_form_item","label","_component_a_input","index","name","namePinyin","disabled","_component_a_time_picker","inTime","outTime","stopTime","km"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\business\\daily-train-station.vue"],"sourcesContent":["<template>\n  <p>\n    <a-space>\n      <a-date-picker v-model:value=\"params.date\" valueFormat=\"YYYY-MM-DD\" placeholder=\"请选择日期\" />\n      <train-select-view v-model=\"params.trainCode\" width=\"200px\"></train-select-view>\n      <a-button type=\"primary\" @click=\"handleQuery()\">刷新</a-button>\n      <a-button type=\"primary\" @click=\"onAdd\">新增</a-button>\n    </a-space>\n  </p>\n  <a-table :dataSource=\"dailyTrainStations\"\n           :columns=\"columns\"\n           :pagination=\"pagination\"\n           @change=\"handleTableChange\"\n           :loading=\"loading\">\n    <template #bodyCell=\"{ column, record }\">\n      <template v-if=\"column.dataIndex === 'operation'\">\n        <a-space>\n          <a-popconfirm\n              title=\"删除后不可恢复，确认删除?\"\n              @confirm=\"onDelete(record)\"\n              ok-text=\"确认\" cancel-text=\"取消\">\n            <a style=\"color: red\">删除</a>\n          </a-popconfirm>\n          <a @click=\"onEdit(record)\">编辑</a>\n        </a-space>\n      </template>\n    </template>\n  </a-table>\n  <a-modal v-model:visible=\"visible\" title=\"每日车站\" @ok=\"handleOk\"\n           ok-text=\"确认\" cancel-text=\"取消\">\n    <a-form :model=\"dailyTrainStation\" :label-col=\"{span: 4}\" :wrapper-col=\"{ span: 20 }\">\n      <a-form-item label=\"日期\">\n        <a-date-picker v-model:value=\"dailyTrainStation.date\" valueFormat=\"YYYY-MM-DD\" placeholder=\"请选择日期\" />\n      </a-form-item>\n      <a-form-item label=\"车次编号\">\n        <train-select-view v-model=\"dailyTrainStation.trainCode\"></train-select-view>\n      </a-form-item>\n      <a-form-item label=\"站序\">\n        <a-input v-model:value=\"dailyTrainStation.index\" />\n      </a-form-item>\n      <a-form-item label=\"站名\">\n        <a-input v-model:value=\"dailyTrainStation.name\" />\n      </a-form-item>\n      <a-form-item label=\"站名拼音\">\n        <a-input v-model:value=\"dailyTrainStation.namePinyin\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"进站时间\">\n        <a-time-picker v-model:value=\"dailyTrainStation.inTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" />\n      </a-form-item>\n      <a-form-item label=\"出站时间\">\n        <a-time-picker v-model:value=\"dailyTrainStation.outTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" />\n      </a-form-item>\n      <a-form-item label=\"停站时长\">\n        <a-time-picker v-model:value=\"dailyTrainStation.stopTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"里程（公里）\">\n        <a-input v-model:value=\"dailyTrainStation.km\" />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport {defineComponent, ref, onMounted, watch} from 'vue';\nimport {notification} from \"ant-design-vue\";\nimport axios from \"axios\";\nimport {pinyin} from \"pinyin-pro\";\nimport dayjs from \"dayjs\";\nimport TrainSelectView from \"@/components/train-select\";\n\nexport default defineComponent({\n  name: \"daily-train-station-view\",\n  components: {TrainSelectView},\n  setup() {\n    const visible = ref(false);\n    let dailyTrainStation = ref({\n      id: undefined,\n      date: undefined,\n      trainCode: undefined,\n      index: undefined,\n      name: undefined,\n      namePinyin: undefined,\n      inTime: undefined,\n      outTime: undefined,\n      stopTime: undefined,\n      km: undefined,\n      createTime: undefined,\n      updateTime: undefined,\n    });\n    const dailyTrainStations = ref([]);\n    // 分页的三个属性名是固定的\n    const pagination = ref({\n      total: 0,\n      current: 1,\n      pageSize: 10,\n    });\n    let loading = ref(false);\n    let params = ref({\n      trainCode: null,\n      date: null\n    });\n    const columns = [\n    {\n      title: '日期',\n      dataIndex: 'date',\n      key: 'date',\n    },\n    {\n      title: '车次编号',\n      dataIndex: 'trainCode',\n      key: 'trainCode',\n    },\n    {\n      title: '站序',\n      dataIndex: 'index',\n      key: 'index',\n    },\n    {\n      title: '站名',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '站名拼音',\n      dataIndex: 'namePinyin',\n      key: 'namePinyin',\n    },\n    {\n      title: '进站时间',\n      dataIndex: 'inTime',\n      key: 'inTime',\n    },\n    {\n      title: '出站时间',\n      dataIndex: 'outTime',\n      key: 'outTime',\n    },\n    {\n      title: '停站时长',\n      dataIndex: 'stopTime',\n      key: 'stopTime',\n    },\n    {\n      title: '里程（公里）',\n      dataIndex: 'km',\n      key: 'km',\n    },\n    {\n      title: '操作',\n      dataIndex: 'operation'\n    }\n    ];\n    watch(() => dailyTrainStation.value.name, ()=>{\n      if (Tool.isNotEmpty(dailyTrainStation.value.name)) {\n        dailyTrainStation.value.namePinyin = pinyin(dailyTrainStation.value.name, { toneType: 'none'}).replaceAll(\" \", \"\");\n      } else {\n        dailyTrainStation.value.namePinyin = \"\";\n      }\n    }, {immediate: true});\n\n    // 自动计算停车时长\n    watch(() => dailyTrainStation.value.inTime, ()=>{\n      let diff = dayjs(dailyTrainStation.value.outTime, 'HH:mm:ss').diff(dayjs(dailyTrainStation.value.inTime, 'HH:mm:ss'), 'seconds');\n      dailyTrainStation.value.stopTime = dayjs('00:00:00', 'HH:mm:ss').second(diff).format('HH:mm:ss');\n    }, {immediate: true});\n\n    // 自动计算停车时长\n    watch(() => dailyTrainStation.value.outTime, ()=>{\n      let diff = dayjs(dailyTrainStation.value.outTime, 'HH:mm:ss').diff(dayjs(dailyTrainStation.value.inTime, 'HH:mm:ss'), 'seconds');\n      dailyTrainStation.value.stopTime = dayjs('00:00:00', 'HH:mm:ss').second(diff).format('HH:mm:ss');\n    }, {immediate: true});\n\n    const onAdd = () => {\n      dailyTrainStation.value = {};\n      visible.value = true;\n    };\n\n    const onEdit = (record) => {\n      dailyTrainStation.value = window.Tool.copy(record);\n      visible.value = true;\n    };\n\n    const onDelete = (record) => {\n      axios.delete(\"/business/admin/daily-train-station/delete/\" + record.id).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"删除成功！\"});\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize,\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleOk = () => {\n      axios.post(\"/business/admin/daily-train-station/save\", dailyTrainStation.value).then((response) => {\n        let data = response.data;\n        if (data.success) {\n          notification.success({description: \"保存成功！\"});\n          visible.value = false;\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleQuery = (param) => {\n      if (!param) {\n        param = {\n          page: 1,\n          size: pagination.value.pageSize\n        };\n      }\n      loading.value = true;\n      axios.get(\"/business/admin/daily-train-station/query-list\", {\n        params: {\n          page: param.page,\n          size: param.size,\n          trainCode: params.value.trainCode,\n          date: params.value.date\n        }\n      }).then((response) => {\n        loading.value = false;\n        let data = response.data;\n        if (data.success) {\n          dailyTrainStations.value = data.content.list;\n          // 设置分页控件的值\n          pagination.value.current = param.page;\n          pagination.value.total = data.content.total;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleTableChange = (pagination) => {\n      // console.log(\"看看自带的分页参数都有啥：\" + pagination);\n      handleQuery({\n        page: pagination.current,\n        size: pagination.pageSize\n      });\n    };\n\n    onMounted(() => {\n      handleQuery({\n        page: 1,\n        size: pagination.value.pageSize\n      });\n    });\n\n    return {\n      dailyTrainStation,\n      visible,\n      dailyTrainStations,\n      pagination,\n      columns,\n      handleTableChange,\n      handleQuery,\n      loading,\n      onAdd,\n      handleOk,\n      onEdit,\n      onDelete,\n      params\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}