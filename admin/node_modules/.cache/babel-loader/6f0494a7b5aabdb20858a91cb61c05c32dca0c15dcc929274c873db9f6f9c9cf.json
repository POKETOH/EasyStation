{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, normalizeStyle as _normalizeStyle } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_select_option = _resolveComponent(\"a-select-option\");\n  const _component_a_select = _resolveComponent(\"a-select\");\n  return _openBlock(), _createBlock(_component_a_select, {\n    value: _ctx.trainCode,\n    \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.trainCode = $event),\n    \"show-search\": \"\",\n    allowClear: \"\",\n    filterOption: _ctx.filterTrainCodeOption,\n    onChange: _ctx.onChange,\n    placeholder: \"请选择车次\",\n    style: _normalizeStyle('width: ' + _ctx.localWidth)\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.trains, item => {\n      return _openBlock(), _createBlock(_component_a_select_option, {\n        key: item.code,\n        value: item.code,\n        label: item.code + item.start + item.end\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.code) + \" \" + _toDisplayString(item.start) + \" ~ \" + _toDisplayString(item.end), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"label\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"value\", \"filterOption\", \"onChange\", \"style\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aAOWC;IAPOC,KAAK,EAAEC,cAAS;0DAATA,cAAS;IAAE,aAAW,EAAX,EAAW;IAACC,UAAU,EAAV,EAAU;IAC/CC,YAAY,EAAEF,0BAAqB;IACnCG,QAAM,EAAEH,aAAQ;IAAEI,WAAW,EAAC,OAAO;IACrCC,KAAK,8BAAcL,eAAU;;sBACrB,MAAsB,oBAAvCM,oBAEkBC,6BAFcP,WAAM,EAAdQ,IAAI;2BAA5BX,aAEkBY;QAFuBC,GAAG,EAAEF,IAAI,CAACG,IAAI;QAAGZ,KAAK,EAAES,IAAI,CAACG,IAAI;QAAGC,KAAK,EAAEJ,IAAI,CAACG,IAAI,GAAGH,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACM;;0BAChH,MAAa,mCAAXN,IAAI,CAACG,IAAI,IAAE,GAAC,oBAAEH,IAAI,CAACK,KAAK,IAAE,KAAG,oBAAEL,IAAI,CAACM,GAAG","names":["_createBlock","_component_a_select","value","_ctx","allowClear","filterOption","onChange","placeholder","style","_createElementBlock","_Fragment","item","_component_a_select_option","key","code","label","start","end"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\components\\train-select.vue"],"sourcesContent":["<template>\n  <a-select v-model:value=\"trainCode\" show-search allowClear\n            :filterOption=\"filterTrainCodeOption\"\n            @change=\"onChange\" placeholder=\"请选择车次\"\n            :style=\"'width: ' + localWidth\">\n    <a-select-option v-for=\"item in trains\" :key=\"item.code\" :value=\"item.code\" :label=\"item.code + item.start + item.end\">\n      {{item.code}} {{item.start}} ~ {{item.end}}\n    </a-select-option>\n  </a-select>\n</template>\n\n<script>\n\nimport {defineComponent, onMounted, ref, watch} from 'vue';\nimport axios from \"axios\";\nimport {notification} from \"ant-design-vue\";\n\nexport default defineComponent({\n  name: \"train-select-view\",\n  props: [\"modelValue\", \"width\"],\n  emits: ['update:modelValue', 'change'],\n  setup(props, {emit}) {\n    const trainCode = ref();\n    const trains = ref([]);\n    const localWidth = ref(props.width);\n    if (Tool.isEmpty(props.width)) {\n      localWidth.value = \"100%\";\n    }\n\n    // 利用watch，动态获取父组件的值，如果放在onMounted或其它方法里，则只有第一次有效\n    watch(() => props.modelValue, ()=>{\n      console.log(\"props.modelValue\", props.modelValue);\n      trainCode.value = props.modelValue;\n    }, {immediate: true});\n\n    /**\n     * 查询所有的车次，用于车次下拉框\n     */\n    const queryAllTrain = () => {\n      let list = SessionStorage.get(SESSION_ALL_TRAIN);\n      if (Tool.isNotEmpty(list)) {\n        console.log(\"queryAllTrain 读取缓存\");\n        trains.value = list;\n      } else {\n        axios.get(\"/business/admin/train/query-all\").then((response) => {\n          let data = response.data;\n          if (data.success) {\n            trains.value = data.content;\n            console.log(\"queryAllTrain 保存缓存\");\n            SessionStorage.set(SESSION_ALL_TRAIN, trains.value);\n          } else {\n            notification.error({description: data.message});\n          }\n        });\n      }\n    };\n\n    /**\n     * 车次下拉框筛选\n     */\n    const filterTrainCodeOption = (input, option) => {\n      console.log(input, option);\n      return option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    };\n\n    /**\n     * 将当前组件的值响应给父组件\n     * @param value\n     */\n    const onChange = (value) => {\n      emit('update:modelValue', value);\n      let train = trains.value.filter(item => item.code === value)[0];\n      if (Tool.isEmpty(train)) {\n        train = {};\n      }\n      emit('change', train);\n    };\n\n    onMounted(() => {\n      queryAllTrain();\n    });\n\n    return {\n      trainCode,\n      trains,\n      filterTrainCodeOption,\n      onChange,\n      localWidth\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}