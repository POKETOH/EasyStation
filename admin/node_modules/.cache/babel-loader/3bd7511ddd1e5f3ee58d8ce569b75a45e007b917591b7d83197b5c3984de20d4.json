{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"a\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"删除\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"重要：第1站是0，对显示销售图有影响\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_train_select_view = _resolveComponent(\"train-select-view\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_station_select_view = _resolveComponent(\"station-select-view\");\n  const _component_a_time_picker = _resolveComponent(\"a-time-picker\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_train_select_view, {\n      modelValue: _ctx.params.trainCode,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.params.trainCode = $event),\n      width: \"200px\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.handleQuery())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"查找\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _ctx.onAdd\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"新增\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: _ctx.trainStations,\n    columns: _ctx.columns,\n    pagination: _ctx.pagination,\n    onChange: _ctx.handleTableChange,\n    loading: _ctx.loading\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createBlock(_component_a_space, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_popconfirm, {\n        title: \"删除后不可恢复，确认删除?\",\n        onConfirm: $event => _ctx.onDelete(record),\n        \"ok-text\": \"确认\",\n        \"cancel-text\": \"取消\"\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), _createElementVNode(\"a\", {\n        onClick: $event => _ctx.onEdit(record)\n      }, \"编辑\", 8 /* PROPS */, _hoisted_2)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\", \"pagination\", \"onChange\", \"loading\"]), _createVNode(_component_a_modal, {\n    visible: _ctx.visible,\n    \"onUpdate:visible\": _cache[10] || (_cache[10] = $event => _ctx.visible = $event),\n    title: \"火车车站\",\n    onOk: _ctx.handleOk,\n    \"ok-text\": \"确认\",\n    \"cancel-text\": \"取消\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      model: _ctx.trainStation,\n      \"label-col\": {\n        span: 4\n      },\n      \"wrapper-col\": {\n        span: 20\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"车次编号\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_train_select_view, {\n          modelValue: _ctx.trainStation.trainCode,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.trainStation.trainCode = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站序\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.trainStation.index,\n          \"onUpdate:value\": _cache[3] || (_cache[3] = $event => _ctx.trainStation.index = $event)\n        }, null, 8 /* PROPS */, [\"value\"]), _hoisted_3]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_station_select_view, {\n          modelValue: _ctx.trainStation.name,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.trainStation.name = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站名拼音\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.trainStation.namePinyin,\n          \"onUpdate:value\": _cache[5] || (_cache[5] = $event => _ctx.trainStation.namePinyin = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"进站时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_time_picker, {\n          value: _ctx.trainStation.inTime,\n          \"onUpdate:value\": _cache[6] || (_cache[6] = $event => _ctx.trainStation.inTime = $event),\n          valueFormat: \"HH:mm:ss\",\n          placeholder: \"请选择时间\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"出站时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_time_picker, {\n          value: _ctx.trainStation.outTime,\n          \"onUpdate:value\": _cache[7] || (_cache[7] = $event => _ctx.trainStation.outTime = $event),\n          valueFormat: \"HH:mm:ss\",\n          placeholder: \"请选择时间\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"停站时长\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_time_picker, {\n          value: _ctx.trainStation.stopTime,\n          \"onUpdate:value\": _cache[8] || (_cache[8] = $event => _ctx.trainStation.stopTime = $event),\n          valueFormat: \"HH:mm:ss\",\n          placeholder: \"请选择时间\",\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"里程（公里）\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.trainStation.km,\n          \"onUpdate:value\": _cache[9] || (_cache[9] = $event => _ctx.trainStation.km = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onOk\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","style","_createVNode","_component_a_space","_component_train_select_view","_ctx","trainCode","width","_component_a_button","type","onClick","_component_a_table","dataSource","columns","pagination","onChange","loading","bodyCell","column","record","dataIndex","_createBlock","key","_component_a_popconfirm","title","onConfirm","_hoisted_1","_component_a_modal","visible","onOk","_component_a_form","model","span","_component_a_form_item","label","_component_a_input","value","index","_hoisted_3","_component_station_select_view","name","namePinyin","disabled","_component_a_time_picker","inTime","valueFormat","placeholder","outTime","stopTime","km"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\base\\train-station.vue"],"sourcesContent":["<template>\n  <p>\n    <a-space>\n      <train-select-view v-model=\"params.trainCode\" width=\"200px\"></train-select-view>\n      <a-button type=\"primary\" @click=\"handleQuery()\">查找</a-button>\n      <a-button type=\"primary\" @click=\"onAdd\">新增</a-button>\n    </a-space>\n  </p>\n  <a-table :dataSource=\"trainStations\"\n           :columns=\"columns\"\n           :pagination=\"pagination\"\n           @change=\"handleTableChange\"\n           :loading=\"loading\">\n    <template #bodyCell=\"{ column, record }\">\n      <template v-if=\"column.dataIndex === 'operation'\">\n        <a-space>\n          <a-popconfirm\n              title=\"删除后不可恢复，确认删除?\"\n              @confirm=\"onDelete(record)\"\n              ok-text=\"确认\" cancel-text=\"取消\">\n            <a style=\"color: red\">删除</a>\n          </a-popconfirm>\n          <a @click=\"onEdit(record)\">编辑</a>\n        </a-space>\n      </template>\n    </template>\n  </a-table>\n  <a-modal v-model:visible=\"visible\" title=\"火车车站\" @ok=\"handleOk\"\n           ok-text=\"确认\" cancel-text=\"取消\">\n    <a-form :model=\"trainStation\" :label-col=\"{span: 4}\" :wrapper-col=\"{ span: 20 }\">\n      <a-form-item label=\"车次编号\">\n        <train-select-view v-model=\"trainStation.trainCode\"></train-select-view>\n      </a-form-item>\n      <a-form-item label=\"站序\">\n        <a-input v-model:value=\"trainStation.index\" />\n        <span style=\"color: red\">重要：第1站是0，对显示销售图有影响</span>\n      </a-form-item>\n      <a-form-item label=\"站名\">\n        <station-select-view v-model=\"trainStation.name\"></station-select-view>\n      </a-form-item>\n      <a-form-item label=\"站名拼音\">\n        <a-input v-model:value=\"trainStation.namePinyin\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"进站时间\">\n        <a-time-picker v-model:value=\"trainStation.inTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" />\n      </a-form-item>\n      <a-form-item label=\"出站时间\">\n        <a-time-picker v-model:value=\"trainStation.outTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" />\n      </a-form-item>\n      <a-form-item label=\"停站时长\">\n        <a-time-picker v-model:value=\"trainStation.stopTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"里程（公里）\">\n        <a-input v-model:value=\"trainStation.km\" />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport {defineComponent, ref, onMounted, watch} from 'vue';\nimport {notification} from \"ant-design-vue\";\nimport axios from \"axios\";\nimport {pinyin} from \"pinyin-pro\";\nimport TrainSelectView from \"@/components/train-select\";\nimport StationSelectView from \"@/components/station-select\";\nimport dayjs from 'dayjs';\n\nexport default defineComponent({\n  name: \"train-station-view\",\n  components: {StationSelectView, TrainSelectView},\n  setup() {\n    const visible = ref(false);\n    let trainStation = ref({\n      id: undefined,\n      trainCode: undefined,\n      index: undefined,\n      name: undefined,\n      namePinyin: undefined,\n      inTime: undefined,\n      outTime: undefined,\n      stopTime: undefined,\n      km: undefined,\n      createTime: undefined,\n      updateTime: undefined,\n    });\n    const trainStations = ref([]);\n    // 分页的三个属性名是固定的\n    const pagination = ref({\n      total: 0,\n      current: 1,\n      pageSize: 10,\n    });\n    let loading = ref(false);\n    let params = ref({\n      trainCode: null\n    });\n    const columns = [\n    {\n      title: '车次编号',\n      dataIndex: 'trainCode',\n      key: 'trainCode',\n    },\n    {\n      title: '站序',\n      dataIndex: 'index',\n      key: 'index',\n    },\n    {\n      title: '站名',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '站名拼音',\n      dataIndex: 'namePinyin',\n      key: 'namePinyin',\n    },\n    {\n      title: '进站时间',\n      dataIndex: 'inTime',\n      key: 'inTime',\n    },\n    {\n      title: '出站时间',\n      dataIndex: 'outTime',\n      key: 'outTime',\n    },\n    {\n      title: '停站时长',\n      dataIndex: 'stopTime',\n      key: 'stopTime',\n    },\n    {\n      title: '里程（公里）',\n      dataIndex: 'km',\n      key: 'km',\n    },\n    {\n      title: '操作',\n      dataIndex: 'operation'\n    }\n    ];\n    watch(() => trainStation.value.name, ()=>{\n      if (Tool.isNotEmpty(trainStation.value.name)) {\n        trainStation.value.namePinyin = pinyin(trainStation.value.name, { toneType: 'none'}).replaceAll(\" \", \"\");\n      } else {\n        trainStation.value.namePinyin = \"\";\n      }\n    }, {immediate: true});\n\n    // 自动计算停车时长\n    watch(() => trainStation.value.inTime, ()=>{\n      let diff = dayjs(trainStation.value.outTime, 'HH:mm:ss').diff(dayjs(trainStation.value.inTime, 'HH:mm:ss'), 'seconds');\n      trainStation.value.stopTime = dayjs('00:00:00', 'HH:mm:ss').second(diff).format('HH:mm:ss');\n    }, {immediate: true});\n\n    // 自动计算停车时长\n    watch(() => trainStation.value.outTime, ()=>{\n      let diff = dayjs(trainStation.value.outTime, 'HH:mm:ss').diff(dayjs(trainStation.value.inTime, 'HH:mm:ss'), 'seconds');\n      trainStation.value.stopTime = dayjs('00:00:00', 'HH:mm:ss').second(diff).format('HH:mm:ss');\n    }, {immediate: true});\n\n    const onAdd = () => {\n      trainStation.value = {};\n      visible.value = true;\n    };\n\n    const onEdit = (record) => {\n      trainStation.value = window.Tool.copy(record);\n      visible.value = true;\n    };\n\n    const onDelete = (record) => {\n      axios.delete(\"/business/admin/train-station/delete/\" + record.id).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"删除成功！\"});\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize,\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleOk = () => {\n      axios.post(\"/business/admin/train-station/save\", trainStation.value).then((response) => {\n        let data = response.data;\n        if (data.success) {\n          notification.success({description: \"保存成功！\"});\n          visible.value = false;\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleQuery = (param) => {\n      if (!param) {\n        param = {\n          page: 1,\n          size: pagination.value.pageSize\n        };\n      }\n      loading.value = true;\n      axios.get(\"/business/admin/train-station/query-list\", {\n        params: {\n          page: param.page,\n          size: param.size,\n          trainCode: params.value.trainCode\n        }\n      }).then((response) => {\n        loading.value = false;\n        let data = response.data;\n        if (data.success) {\n          trainStations.value = data.content.list;\n          // 设置分页控件的值\n          pagination.value.current = param.page;\n          pagination.value.total = data.content.total;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleTableChange = (pagination) => {\n      // console.log(\"看看自带的分页参数都有啥：\" + pagination);\n      handleQuery({\n        page: pagination.current,\n        size: pagination.pageSize\n      });\n    };\n\n    onMounted(() => {\n      handleQuery({\n        page: 1,\n        size: pagination.value.pageSize\n      });\n    });\n\n    return {\n      trainStation,\n      visible,\n      trainStations,\n      pagination,\n      columns,\n      handleTableChange,\n      handleQuery,\n      loading,\n      onAdd,\n      handleOk,\n      onEdit,\n      onDelete,\n      params\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}