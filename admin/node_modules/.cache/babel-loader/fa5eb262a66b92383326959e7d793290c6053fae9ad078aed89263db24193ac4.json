{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"a\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"删除\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.handleQuery())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"刷新\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _ctx.onAdd\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"新增\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: _ctx.stations,\n    columns: _ctx.columns,\n    pagination: _ctx.pagination,\n    onChange: _ctx.handleTableChange,\n    loading: _ctx.loading\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createBlock(_component_a_space, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_popconfirm, {\n        title: \"删除后不可恢复，确认删除?\",\n        onConfirm: $event => _ctx.onDelete(record),\n        \"ok-text\": \"确认\",\n        \"cancel-text\": \"取消\"\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), _createElementVNode(\"a\", {\n        onClick: $event => _ctx.onEdit(record)\n      }, \"编辑\", 8 /* PROPS */, _hoisted_2)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\", \"pagination\", \"onChange\", \"loading\"]), _createVNode(_component_a_modal, {\n    visible: _ctx.visible,\n    \"onUpdate:visible\": _cache[4] || (_cache[4] = $event => _ctx.visible = $event),\n    title: \"车站\",\n    onOk: _ctx.handleOk,\n    \"ok-text\": \"确认\",\n    \"cancel-text\": \"取消\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      model: _ctx.station,\n      \"label-col\": {\n        span: 4\n      },\n      \"wrapper-col\": {\n        span: 20\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"站名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.station.name,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.station.name = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站名拼音\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.station.namePinyin,\n          \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.station.namePinyin = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"拼音首字母\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.station.namePy,\n          \"onUpdate:value\": _cache[3] || (_cache[3] = $event => _ctx.station.namePy = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onOk\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAmBYA,oBAA4B;EAAzBC,KAAkB,EAAlB;IAAA;EAAA;AAAkB,GAAC,IAAE;;;;;;;;;;;6DAlBlCD,oBAKI,YAJFE,aAGUC;sBAFR,MAA6D,CAA7DD,aAA6DE;MAAnDC,IAAI,EAAC,SAAS;MAAEC,OAAK,sCAAEC,gBAAW;;wBAAI,MAAE,kBAAF,IAAE;;QAClDL,aAAqDE;MAA3CC,IAAI,EAAC,SAAS;MAAEC,OAAK,EAAEC;;wBAAO,MAAE,kBAAF,IAAE;;;;QAG9CL,aAkBUM;IAlBAC,UAAU,EAAEF,aAAQ;IACpBG,OAAO,EAAEH,YAAO;IAChBI,UAAU,EAAEJ,eAAU;IACtBK,QAAM,EAAEL,sBAAiB;IACzBM,OAAO,EAAEN;;IACNO,QAAQ,WACjB,CAUW;MAXUC,MAAM;MAAEC;IAAM,OACnBD,MAAM,CAACE,SAAS,kCAC9BC,aAQUf;MAAAgB;IAAA;wBAPR,MAKe,CALfjB,aAKekB;QAJXC,KAAK,EAAC,eAAe;QACpBC,SAAO,YAAEf,aAAQ,CAACS,MAAM;QACzB,SAAO,EAAC,IAAI;QAAC,aAAW,EAAC;;0BAC3B,MAA4B,CAA5BO,UAA4B;;0DAE9BvB,oBAAiC;QAA7BM,OAAK,YAAEC,WAAM,CAACS,MAAM;SAAG,IAAE;;;;qFAKrCd,aAaUsB;IAbOC,OAAO,EAAElB,YAAO;4DAAPA,YAAO;IAAEc,KAAK,EAAC,IAAI;IAAEK,IAAE,EAAEnB,aAAQ;IAClD,SAAO,EAAC,IAAI;IAAC,aAAW,EAAC;;sBAChC,MAUS,CAVTL,aAUSyB;MAVAC,KAAK,EAAErB,YAAO;MAAG,WAAS,EAAE;QAAAsB;MAAA,CAAS;MAAG,aAAW,EAAE;QAAAA;MAAA;;wBAC5D,MAEc,CAFd3B,aAEc4B;QAFDC,KAAK,EAAC;MAAI;0BACrB,MAAwC,CAAxC7B,aAAwC8B;UAAvBC,KAAK,EAAE1B,YAAO,CAAC2B,IAAI;gEAAZ3B,YAAO,CAAC2B,IAAI;;;UAEtChC,aAEc4B;QAFDC,KAAK,EAAC;MAAM;0BACvB,MAAsD,CAAtD7B,aAAsD8B;UAArCC,KAAK,EAAE1B,YAAO,CAAC4B,UAAU;gEAAlB5B,YAAO,CAAC4B,UAAU;UAAEC,QAAQ,EAAR;;;UAE9ClC,aAEc4B;QAFDC,KAAK,EAAC;MAAO;0BACxB,MAAkD,CAAlD7B,aAAkD8B;UAAjCC,KAAK,EAAE1B,YAAO,CAAC8B,MAAM;gEAAd9B,YAAO,CAAC8B,MAAM;UAAED,QAAQ,EAAR","names":["_createElementVNode","style","_createVNode","_component_a_space","_component_a_button","type","onClick","_ctx","_component_a_table","dataSource","columns","pagination","onChange","loading","bodyCell","column","record","dataIndex","_createBlock","key","_component_a_popconfirm","title","onConfirm","_hoisted_1","_component_a_modal","visible","onOk","_component_a_form","model","span","_component_a_form_item","label","_component_a_input","value","name","namePinyin","disabled","namePy"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\base\\station.vue"],"sourcesContent":["<template>\n  <p>\n    <a-space>\n      <a-button type=\"primary\" @click=\"handleQuery()\">刷新</a-button>\n      <a-button type=\"primary\" @click=\"onAdd\">新增</a-button>\n    </a-space>\n  </p>\n  <a-table :dataSource=\"stations\"\n           :columns=\"columns\"\n           :pagination=\"pagination\"\n           @change=\"handleTableChange\"\n           :loading=\"loading\">\n    <template #bodyCell=\"{ column, record }\">\n      <template v-if=\"column.dataIndex === 'operation'\">\n        <a-space>\n          <a-popconfirm\n              title=\"删除后不可恢复，确认删除?\"\n              @confirm=\"onDelete(record)\"\n              ok-text=\"确认\" cancel-text=\"取消\">\n            <a style=\"color: red\">删除</a>\n          </a-popconfirm>\n          <a @click=\"onEdit(record)\">编辑</a>\n        </a-space>\n      </template>\n    </template>\n  </a-table>\n  <a-modal v-model:visible=\"visible\" title=\"车站\" @ok=\"handleOk\"\n           ok-text=\"确认\" cancel-text=\"取消\">\n    <a-form :model=\"station\" :label-col=\"{span: 4}\" :wrapper-col=\"{ span: 20 }\">\n      <a-form-item label=\"站名\">\n        <a-input v-model:value=\"station.name\" />\n      </a-form-item>\n      <a-form-item label=\"站名拼音\">\n        <a-input v-model:value=\"station.namePinyin\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"拼音首字母\">\n        <a-input v-model:value=\"station.namePy\" disabled/>\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted, watch } from 'vue';\nimport {notification} from \"ant-design-vue\";\nimport axios from \"axios\";\nimport {pinyin} from \"pinyin-pro\";\n\nexport default defineComponent({\n  name: \"station-view\",\n  setup() {\n    const visible = ref(false);\n    let station = ref({\n      id: undefined,\n      name: undefined,\n      namePinyin: undefined,\n      namePy: undefined,\n      createTime: undefined,\n      updateTime: undefined,\n    });\n    const stations = ref([]);\n    // 分页的三个属性名是固定的\n    const pagination = ref({\n      total: 0,\n      current: 1,\n      pageSize: 10,\n    });\n    let loading = ref(false);\n    const columns = [\n    {\n      title: '站名',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '站名拼音',\n      dataIndex: 'namePinyin',\n      key: 'namePinyin',\n    },\n    {\n      title: '站名拼音首字母',\n      dataIndex: 'namePy',\n      key: 'namePy',\n    },\n    {\n      title: '操作',\n      dataIndex: 'operation'\n    }\n    ];\n\n    // http://pinyin-pro.cn/\n    watch(() => station.value.name, ()=>{\n      if (Tool.isNotEmpty(station.value.name)) {\n        station.value.namePinyin = pinyin(station.value.name, { toneType: 'none'}).replaceAll(\" \", \"\");\n        station.value.namePy = pinyin(station.value.name, { pattern: 'first', toneType: 'none'}).replaceAll(\" \", \"\");\n      } else {\n        station.value.namePinyin = \"\";\n        station.value.namePy = \"\";\n      }\n    }, {immediate: true});\n\n    const onAdd = () => {\n      station.value = {};\n      visible.value = true;\n    };\n\n    const onEdit = (record) => {\n      station.value = window.Tool.copy(record);\n      visible.value = true;\n    };\n\n    const onDelete = (record) => {\n      axios.delete(\"/business/admin/station/delete/\" + record.id).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"删除成功！\"});\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize,\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleOk = () => {\n      axios.post(\"/business/admin/station/save\", station.value).then((response) => {\n        let data = response.data;\n        if (data.success) {\n          notification.success({description: \"保存成功！\"});\n          visible.value = false;\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleQuery = (param) => {\n      if (!param) {\n        param = {\n          page: 1,\n          size: pagination.value.pageSize\n        };\n      }\n      loading.value = true;\n      axios.get(\"/business/admin/station/query-list\", {\n        params: {\n          page: param.page,\n          size: param.size\n        }\n      }).then((response) => {\n        loading.value = false;\n        let data = response.data;\n        if (data.success) {\n          stations.value = data.content.list;\n          // 设置分页控件的值\n          pagination.value.current = param.page;\n          pagination.value.total = data.content.total;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleTableChange = (pagination) => {\n      // console.log(\"看看自带的分页参数都有啥：\" + pagination);\n      handleQuery({\n        page: pagination.current,\n        size: pagination.pageSize\n      });\n    };\n\n    onMounted(() => {\n      handleQuery({\n        page: 1,\n        size: pagination.value.pageSize\n      });\n    });\n\n    return {\n      station,\n      visible,\n      stations,\n      pagination,\n      columns,\n      handleTableChange,\n      handleQuery,\n      loading,\n      onAdd,\n      handleOk,\n      onEdit,\n      onDelete\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}