{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"job\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"ant-alert ant-alert-success\"\n}, [/*#__PURE__*/_createTextVNode(\" 每5秒执行一次：0/5 * * * * ? \"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" 每5分钟执行一次：* 0/5 * * * ? \")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, [_createVNode(_component_a_button, {\n    type: \"primary\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.handleAdd())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 新增 \")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\"  \"), _createVNode(_component_a_button, {\n    type: \"primary\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.handleQuery())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 刷新 \")]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: _ctx.jobs,\n    columns: _ctx.columns,\n    loading: _ctx.loading\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createBlock(_component_a_space, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_popconfirm, {\n        title: \"手动执行会立即执行一次，确定执行？\",\n        \"ok-text\": \"是\",\n        \"cancel-text\": \"否\",\n        onConfirm: $event => _ctx.handleRun(record)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_button, {\n          type: \"primary\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 手动执行 \")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), _createVNode(_component_a_popconfirm, {\n        title: \"确定重启？\",\n        \"ok-text\": \"是\",\n        \"cancel-text\": \"否\",\n        onConfirm: $event => _ctx.handleResume(record)\n      }, {\n        default: _withCtx(() => [_withDirectives(_createVNode(_component_a_button, {\n          type: \"primary\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 重启 \")]),\n          _: 2 /* DYNAMIC */\n        }, 1536 /* NEED_PATCH, DYNAMIC_SLOTS */), [[_vShow, record.state === 'PAUSED' || record.state === 'ERROR']])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), _createVNode(_component_a_popconfirm, {\n        title: \"确定暂停？\",\n        \"ok-text\": \"是\",\n        \"cancel-text\": \"否\",\n        onConfirm: $event => _ctx.handlePause(record)\n      }, {\n        default: _withCtx(() => [_withDirectives(_createVNode(_component_a_button, {\n          type: \"primary\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 暂停 \")]),\n          _: 2 /* DYNAMIC */\n        }, 1536 /* NEED_PATCH, DYNAMIC_SLOTS */), [[_vShow, record.state === 'NORMAL' || record.state === 'BLOCKED']])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), _createVNode(_component_a_button, {\n        type: \"primary\",\n        onClick: $event => _ctx.handleEdit(record),\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 编辑 \")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_a_popconfirm, {\n        title: \"删除后不可恢复，确认删除?\",\n        \"ok-text\": \"是\",\n        \"cancel-text\": \"否\",\n        onConfirm: $event => _ctx.handleDelete(record)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_button, {\n          type: \"danger\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 删除 \")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\", \"loading\"]), _createVNode(_component_a_modal, {\n    title: \"用户\",\n    visible: _ctx.modalVisible,\n    \"onUpdate:visible\": _cache[6] || (_cache[6] = $event => _ctx.modalVisible = $event),\n    \"confirm-loading\": _ctx.modalLoading,\n    onOk: _ctx.handleModalOk\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      model: _ctx.job,\n      \"label-col\": {\n        span: 6\n      },\n      \"wrapper-col\": {\n        span: 18\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"类名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.job.name,\n          \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.job.name = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"描述\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.job.description,\n          \"onUpdate:value\": _cache[3] || (_cache[3] = $event => _ctx.job.description = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"分组\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.job.group,\n          \"onUpdate:value\": _cache[4] || (_cache[4] = $event => _ctx.job.group = $event),\n          disabled: !!_ctx.job.state\n        }, null, 8 /* PROPS */, [\"value\", \"disabled\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"表达式\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.job.cronExpression,\n          \"onUpdate:value\": _cache[5] || (_cache[5] = $event => _ctx.job.cronExpression = $event)\n        }, null, 8 /* PROPS */, [\"value\"]), _hoisted_2]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"confirm-loading\", \"onOk\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_a_button","type","onClick","_ctx","_component_a_table","dataSource","columns","loading","bodyCell","column","record","dataIndex","_createBlock","_component_a_space","key","_component_a_popconfirm","title","onConfirm","size","state","_component_a_modal","visible","onOk","_component_a_form","model","span","_component_a_form_item","label","_component_a_input","value","name","description","group","disabled","cronExpression","_hoisted_2"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\batch\\job.vue"],"sourcesContent":["<template>\n  <div class=\"job\">\n    <p>\n      <a-button type=\"primary\" @click=\"handleAdd()\">\n        新增\n      </a-button>&nbsp;\n      <a-button type=\"primary\" @click=\"handleQuery()\">\n        刷新\n      </a-button>\n    </p>\n    <a-table :dataSource=\"jobs\"\n             :columns=\"columns\"\n             :loading=\"loading\">\n      <template #bodyCell=\"{ column, record }\">\n        <template v-if=\"column.dataIndex === 'operation'\">\n          <a-space>\n            <a-popconfirm\n                title=\"手动执行会立即执行一次，确定执行？\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"handleRun(record)\"\n            >\n              <a-button type=\"primary\" size=\"small\">\n                手动执行\n              </a-button>\n            </a-popconfirm>\n            <a-popconfirm\n                title=\"确定重启？\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"handleResume(record)\"\n            >\n              <a-button v-show=\"record.state === 'PAUSED' || record.state === 'ERROR'\" type=\"primary\" size=\"small\">\n                重启\n              </a-button>\n            </a-popconfirm>\n            <a-popconfirm\n                title=\"确定暂停？\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"handlePause(record)\"\n            >\n              <a-button v-show=\"record.state === 'NORMAL' || record.state === 'BLOCKED'\" type=\"primary\" size=\"small\">\n                暂停\n              </a-button>\n            </a-popconfirm>\n            <a-button type=\"primary\" @click=\"handleEdit(record)\" size=\"small\">\n              编辑\n            </a-button>\n            <a-popconfirm\n                title=\"删除后不可恢复，确认删除?\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"handleDelete(record)\"\n            >\n              <a-button type=\"danger\" size=\"small\">\n                删除\n              </a-button>\n            </a-popconfirm>\n          </a-space>\n        </template>\n      </template>\n    </a-table>\n\n    <a-modal\n        title=\"用户\"\n        v-model:visible=\"modalVisible\"\n        :confirm-loading=\"modalLoading\"\n        @ok=\"handleModalOk\"\n    >\n      <a-form :model=\"job\" :label-col=\"{ span: 6 }\" :wrapper-col=\"{ span: 18 }\">\n        <a-form-item label=\"类名\">\n          <a-input v-model:value=\"job.name\" />\n        </a-form-item>\n        <a-form-item label=\"描述\">\n          <a-input v-model:value=\"job.description\" />\n        </a-form-item>\n        <a-form-item label=\"分组\">\n          <a-input v-model:value=\"job.group\" :disabled=\"!!job.state\"/>\n        </a-form-item>\n        <a-form-item label=\"表达式\">\n          <a-input v-model:value=\"job.cronExpression\" />\n          <div class=\"ant-alert ant-alert-success\">\n            每5秒执行一次：0/5 * * * * ?\n            <br>\n            每5分钟执行一次：* 0/5 * * * ?\n          </div>\n        </a-form-item>\n      </a-form>\n    </a-modal>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, ref } from 'vue';\nimport axios from 'axios';\nimport { notification } from 'ant-design-vue';\n\nexport default defineComponent({\n  name: 'batch-job-view',\n  setup () {\n    const jobs = ref();\n    const loading = ref();\n\n    const columns = [{\n      title: '分组',\n      dataIndex: 'group',\n    }, {\n      title: '类名',\n      dataIndex: 'name',\n    }, {\n      title: '描述',\n      dataIndex: 'description',\n    }, {\n      title: '状态',\n      dataIndex: 'state',\n    }, {\n      title: '表达式',\n      dataIndex: 'cronExpression',\n    }, {\n      title: '上次时间',\n      dataIndex: 'preFireTime',\n    }, {\n      title: '下次时间',\n      dataIndex: 'nextFireTime',\n    }, {\n      title: '操作',\n      dataIndex: 'operation'\n    }];\n\n    const handleQuery = () => {\n      loading.value = true;\n      jobs.value = [];\n      axios.get('/batch/admin/job/query').then((response) => {\n        loading.value = false;\n        const data = response.data;\n        if (data.success) {\n          jobs.value = data.content;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    // -------- 表单 ---------\n    const job = ref();\n    job.value = {};\n    const modalVisible = ref(false);\n    const modalLoading = ref(false);\n    const handleModalOk = () => {\n      modalLoading.value = true;\n      let url = \"add\";\n      if (job.value.state) {\n        url = \"reschedule\";\n      }\n      axios.post('/batch/admin/job/' + url, job.value).then((response) => {\n        modalLoading.value = false;\n        const data = response.data;\n        if (data.success) {\n          modalVisible.value = false;\n          notification.success({description: \"保存成功！\"});\n          handleQuery();\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    /**\n     * 新增\n     */\n    const handleAdd = () => {\n      modalVisible.value = true;\n      job.value = {\n        group: 'DEFAULT'\n      };\n    };\n\n    /**\n     * 编辑\n     */\n    const handleEdit = (record) => {\n      modalVisible.value = true;\n      job.value = Tool.copy(record);\n    };\n\n    /**\n     * 删除\n     */\n    const handleDelete = (record) => {\n      axios.post('/batch/admin/job/delete', {\n        name: record.name,\n        group: record.group\n      }).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"删除成功！\"});\n          handleQuery();\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    /**\n     * 暂停\n     */\n    const handlePause = (record) => {\n      axios.post('/batch/admin/job/pause', {\n        name: record.name,\n        group: record.group\n      }).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"暂停成功！\"});\n          handleQuery();\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    /**\n     * 重启\n     */\n    const handleResume = (record) => {\n      axios.post('/batch/admin/job/reschedule', record).then((response) => {\n        modalLoading.value = false;\n        const data = response.data;\n        if (data.success) {\n          modalVisible.value = false;\n          notification.success({description: \"重启成功！\"});\n          handleQuery();\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    /**\n     * 手动执行\n     */\n    const handleRun = (record) => {\n      axios.post('/batch/admin/job/run', record).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"手动执行成功！\"});\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const getEnumValue = (key, obj) => {\n      return Tool.getEnumValue(key, obj);\n    };\n\n    onMounted(() => {\n      console.log('index mounted!');\n      handleQuery();\n    });\n\n    return {\n      columns,\n      jobs,\n      loading,\n      handleQuery,\n\n      handleAdd,\n      handleEdit,\n      handleDelete,\n      handleResume,\n      handlePause,\n      job,\n      modalVisible,\n      modalLoading,\n      handleModalOk,\n      getEnumValue,\n      handleRun\n    };\n  }\n})\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}