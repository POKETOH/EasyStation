{"ast":null,"code":"import { defineComponent, onMounted, ref, watch } from 'vue';\nimport axios from \"axios\";\nimport { notification } from \"ant-design-vue\";\nexport default defineComponent({\n  name: \"train-select-view\",\n  props: [\"modelValue\", \"width\"],\n  emits: ['update:modelValue', 'change'],\n  setup(props, {\n    emit\n  }) {\n    const trainCode = ref();\n    const trains = ref([]);\n    const localWidth = ref(props.width);\n    if (Tool.isEmpty(props.width)) {\n      localWidth.value = \"100%\";\n    }\n\n    // 利用watch，动态获取父组件的值，如果放在onMounted或其它方法里，则只有第一次有效\n    watch(() => props.modelValue, () => {\n      console.log(\"props.modelValue\", props.modelValue);\n      trainCode.value = props.modelValue;\n    }, {\n      immediate: true\n    });\n\n    /**\n     * 查询所有的车次，用于车次下拉框\n     */\n    const queryAllTrain = () => {\n      let list = SessionStorage.get(SESSION_ALL_TRAIN);\n      if (Tool.isNotEmpty(list)) {\n        console.log(\"queryAllTrain 读取缓存\");\n        trains.value = list;\n      } else {\n        axios.get(\"/business/admin/train/query-all\").then(response => {\n          let data = response.data;\n          if (data.success) {\n            trains.value = data.content;\n            console.log(\"queryAllTrain 保存缓存\");\n            SessionStorage.set(SESSION_ALL_TRAIN, trains.value);\n          } else {\n            notification.error({\n              description: data.message\n            });\n          }\n        });\n      }\n    };\n\n    /**\n     * 车次下拉框筛选\n     */\n    const filterTrainCodeOption = (input, option) => {\n      console.log(input, option);\n      return option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    };\n\n    /**\n     * 将当前组件的值响应给父组件\n     * @param value\n     */\n    const onChange = value => {\n      emit('update:modelValue', value);\n      let train = trains.value.filter(item => item.code === value)[0];\n      if (Tool.isEmpty(train)) {\n        train = {};\n      }\n      emit('change', train);\n    };\n    onMounted(() => {\n      queryAllTrain();\n    });\n    return {\n      trainCode,\n      trains,\n      filterTrainCodeOption,\n      onChange,\n      localWidth\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["defineComponent","onMounted","ref","watch","axios","notification","name","props","emits","setup","emit","trainCode","trains","localWidth","width","Tool","isEmpty","value","modelValue","console","log","immediate","queryAllTrain","list","SessionStorage","get","SESSION_ALL_TRAIN","isNotEmpty","then","response","data","success","content","set","error","description","message","filterTrainCodeOption","input","option","label","toLowerCase","indexOf","onChange","train","filter","item","code"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\components\\train-select.vue"],"sourcesContent":["<template>\n  <a-select v-model:value=\"trainCode\" show-search allowClear\n            :filterOption=\"filterTrainCodeOption\"\n            @change=\"onChange\" placeholder=\"请选择车次\"\n            :style=\"'width: ' + localWidth\">\n    <a-select-option v-for=\"item in trains\" :key=\"item.code\" :value=\"item.code\" :label=\"item.code + item.start + item.end\">\n      {{item.code}} {{item.start}} ~ {{item.end}}\n    </a-select-option>\n  </a-select>\n</template>\n\n<script>\n\nimport {defineComponent, onMounted, ref, watch} from 'vue';\nimport axios from \"axios\";\nimport {notification} from \"ant-design-vue\";\n\nexport default defineComponent({\n  name: \"train-select-view\",\n  props: [\"modelValue\", \"width\"],\n  emits: ['update:modelValue', 'change'],\n  setup(props, {emit}) {\n    const trainCode = ref();\n    const trains = ref([]);\n    const localWidth = ref(props.width);\n    if (Tool.isEmpty(props.width)) {\n      localWidth.value = \"100%\";\n    }\n\n    // 利用watch，动态获取父组件的值，如果放在onMounted或其它方法里，则只有第一次有效\n    watch(() => props.modelValue, ()=>{\n      console.log(\"props.modelValue\", props.modelValue);\n      trainCode.value = props.modelValue;\n    }, {immediate: true});\n\n    /**\n     * 查询所有的车次，用于车次下拉框\n     */\n    const queryAllTrain = () => {\n      let list = SessionStorage.get(SESSION_ALL_TRAIN);\n      if (Tool.isNotEmpty(list)) {\n        console.log(\"queryAllTrain 读取缓存\");\n        trains.value = list;\n      } else {\n        axios.get(\"/business/admin/train/query-all\").then((response) => {\n          let data = response.data;\n          if (data.success) {\n            trains.value = data.content;\n            console.log(\"queryAllTrain 保存缓存\");\n            SessionStorage.set(SESSION_ALL_TRAIN, trains.value);\n          } else {\n            notification.error({description: data.message});\n          }\n        });\n      }\n    };\n\n    /**\n     * 车次下拉框筛选\n     */\n    const filterTrainCodeOption = (input, option) => {\n      console.log(input, option);\n      return option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    };\n\n    /**\n     * 将当前组件的值响应给父组件\n     * @param value\n     */\n    const onChange = (value) => {\n      emit('update:modelValue', value);\n      let train = trains.value.filter(item => item.code === value)[0];\n      if (Tool.isEmpty(train)) {\n        train = {};\n      }\n      emit('change', train);\n    };\n\n    onMounted(() => {\n      queryAllTrain();\n    });\n\n    return {\n      trainCode,\n      trains,\n      filterTrainCodeOption,\n      onChange,\n      localWidth\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}