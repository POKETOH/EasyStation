{"ast":null,"code":"import { defineComponent, ref, onMounted, watch } from 'vue';\nimport { notification } from \"ant-design-vue\";\nimport axios from \"axios\";\nimport { pinyin } from \"pinyin-pro\";\nimport StationSelectView from \"@/components/station-select\";\nexport default defineComponent({\n  name: \"train-view\",\n  components: {\n    StationSelectView\n  },\n  setup() {\n    const TRAIN_TYPE_ARRAY = window.TRAIN_TYPE_ARRAY;\n    const visible = ref(false);\n    let train = ref({\n      id: undefined,\n      code: undefined,\n      type: undefined,\n      start: undefined,\n      startPinyin: undefined,\n      startTime: undefined,\n      end: undefined,\n      endPinyin: undefined,\n      endTime: undefined,\n      createTime: undefined,\n      updateTime: undefined\n    });\n    const trains = ref([]);\n    // 分页的三个属性名是固定的\n    const pagination = ref({\n      total: 0,\n      current: 1,\n      pageSize: 10\n    });\n    let loading = ref(false);\n    const columns = [{\n      title: '车次编号',\n      dataIndex: 'code',\n      key: 'code'\n    }, {\n      title: '车次类型',\n      dataIndex: 'type',\n      key: 'type'\n    }, {\n      title: '始发站',\n      dataIndex: 'start',\n      key: 'start'\n    }, {\n      title: '始发站拼音',\n      dataIndex: 'startPinyin',\n      key: 'startPinyin'\n    }, {\n      title: '出发时间',\n      dataIndex: 'startTime',\n      key: 'startTime'\n    }, {\n      title: '终点站',\n      dataIndex: 'end',\n      key: 'end'\n    }, {\n      title: '终点站拼音',\n      dataIndex: 'endPinyin',\n      key: 'endPinyin'\n    }, {\n      title: '到站时间',\n      dataIndex: 'endTime',\n      key: 'endTime'\n    }, {\n      title: '操作',\n      dataIndex: 'operation'\n    }];\n    watch(() => train.value.start, () => {\n      if (Tool.isNotEmpty(train.value.start)) {\n        train.value.startPinyin = pinyin(train.value.start, {\n          toneType: 'none'\n        }).replaceAll(\" \", \"\");\n      } else {\n        train.value.startPinyin = \"\";\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => train.value.end, () => {\n      if (Tool.isNotEmpty(train.value.end)) {\n        train.value.endPinyin = pinyin(train.value.end, {\n          toneType: 'none'\n        }).replaceAll(\" \", \"\");\n      } else {\n        train.value.endPinyin = \"\";\n      }\n    }, {\n      immediate: true\n    });\n    const onAdd = () => {\n      train.value = {};\n      visible.value = true;\n    };\n    const onEdit = record => {\n      train.value = window.Tool.copy(record);\n      visible.value = true;\n    };\n    const onDelete = record => {\n      axios.delete(\"/business/admin/train/delete/\" + record.id).then(response => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({\n            description: \"删除成功！\"\n          });\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize\n          });\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n    const handleOk = () => {\n      axios.post(\"/business/admin/train/save\", train.value).then(response => {\n        let data = response.data;\n        if (data.success) {\n          notification.success({\n            description: \"保存成功！\"\n          });\n          visible.value = false;\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize\n          });\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n    const handleQuery = param => {\n      if (!param) {\n        param = {\n          page: 1,\n          size: pagination.value.pageSize\n        };\n      }\n      loading.value = true;\n      axios.get(\"/business/admin/train/query-list\", {\n        params: {\n          page: param.page,\n          size: param.size\n        }\n      }).then(response => {\n        loading.value = false;\n        let data = response.data;\n        if (data.success) {\n          trains.value = data.content.list;\n          // 设置分页控件的值\n          pagination.value.current = param.page;\n          pagination.value.total = data.content.total;\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n    const handleTableChange = pagination => {\n      // console.log(\"看看自带的分页参数都有啥：\" + pagination);\n      handleQuery({\n        page: pagination.current,\n        size: pagination.pageSize\n      });\n    };\n    const genSeat = record => {\n      loading.value = true;\n      axios.get(\"/business/admin/train/gen-seat/\" + record.code).then(response => {\n        loading.value = false;\n        const data = response.data;\n        if (data.success) {\n          notification.success({\n            description: \"生成成功！\"\n          });\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n    onMounted(() => {\n      handleQuery({\n        page: 1,\n        size: pagination.value.pageSize\n      });\n    });\n    return {\n      TRAIN_TYPE_ARRAY,\n      train,\n      visible,\n      trains,\n      pagination,\n      columns,\n      handleTableChange,\n      handleQuery,\n      loading,\n      onAdd,\n      handleOk,\n      onEdit,\n      onDelete,\n      genSeat\n    };\n  }\n});","map":{"version":3,"mappings":"AA2EA,SAASA,eAAe,EAAEC,GAAG,EAAEC,SAAS,EAAEC,KAAI,QAAS,KAAK;AAC5D,SAAQC,YAAY,QAAO,gBAAgB;AAC3C,OAAOC,KAAI,MAAO,OAAO;AACzB,SAAQC,MAAM,QAAO,YAAY;AACjC,OAAOC,iBAAgB,MAAO,6BAA6B;AAE3D,eAAeP,eAAe,CAAC;EAC7BQ,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IAACF;EAAiB,CAAC;EAC/BG,KAAK,GAAG;IACN,MAAMC,gBAAe,GAAIC,MAAM,CAACD,gBAAgB;IAChD,MAAME,OAAM,GAAIZ,GAAG,CAAC,KAAK,CAAC;IAC1B,IAAIa,KAAI,GAAIb,GAAG,CAAC;MACdc,EAAE,EAAEC,SAAS;MACbC,IAAI,EAAED,SAAS;MACfE,IAAI,EAAEF,SAAS;MACfG,KAAK,EAAEH,SAAS;MAChBI,WAAW,EAAEJ,SAAS;MACtBK,SAAS,EAAEL,SAAS;MACpBM,GAAG,EAAEN,SAAS;MACdO,SAAS,EAAEP,SAAS;MACpBQ,OAAO,EAAER,SAAS;MAClBS,UAAU,EAAET,SAAS;MACrBU,UAAU,EAAEV;IACd,CAAC,CAAC;IACF,MAAMW,MAAK,GAAI1B,GAAG,CAAC,EAAE,CAAC;IACtB;IACA,MAAM2B,UAAS,GAAI3B,GAAG,CAAC;MACrB4B,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,IAAIC,OAAM,GAAI/B,GAAG,CAAC,KAAK,CAAC;IACxB,MAAMgC,OAAM,GAAI,CAChB;MACEC,KAAK,EAAE,MAAM;MACbC,SAAS,EAAE,MAAM;MACjBC,GAAG,EAAE;IACP,CAAC,EACD;MACEF,KAAK,EAAE,MAAM;MACbC,SAAS,EAAE,MAAM;MACjBC,GAAG,EAAE;IACP,CAAC,EACD;MACEF,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE,OAAO;MAClBC,GAAG,EAAE;IACP,CAAC,EACD;MACEF,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE,aAAa;MACxBC,GAAG,EAAE;IACP,CAAC,EACD;MACEF,KAAK,EAAE,MAAM;MACbC,SAAS,EAAE,WAAW;MACtBC,GAAG,EAAE;IACP,CAAC,EACD;MACEF,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE,KAAK;MAChBC,GAAG,EAAE;IACP,CAAC,EACD;MACEF,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE,WAAW;MACtBC,GAAG,EAAE;IACP,CAAC,EACD;MACEF,KAAK,EAAE,MAAM;MACbC,SAAS,EAAE,SAAS;MACpBC,GAAG,EAAE;IACP,CAAC,EACD;MACEF,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE;IACb,EACC;IAEDhC,KAAK,CAAC,MAAMW,KAAK,CAACuB,KAAK,CAAClB,KAAK,EAAE,MAAI;MACjC,IAAImB,IAAI,CAACC,UAAU,CAACzB,KAAK,CAACuB,KAAK,CAAClB,KAAK,CAAC,EAAE;QACtCL,KAAK,CAACuB,KAAK,CAACjB,WAAU,GAAId,MAAM,CAACQ,KAAK,CAACuB,KAAK,CAAClB,KAAK,EAAE;UAAEqB,QAAQ,EAAE;QAAM,CAAC,CAAC,CAACC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;MAC9F,OAAO;QACL3B,KAAK,CAACuB,KAAK,CAACjB,WAAU,GAAI,EAAE;MAC9B;IACF,CAAC,EAAE;MAACsB,SAAS,EAAE;IAAI,CAAC,CAAC;IACrBvC,KAAK,CAAC,MAAMW,KAAK,CAACuB,KAAK,CAACf,GAAG,EAAE,MAAI;MAC/B,IAAIgB,IAAI,CAACC,UAAU,CAACzB,KAAK,CAACuB,KAAK,CAACf,GAAG,CAAC,EAAE;QACpCR,KAAK,CAACuB,KAAK,CAACd,SAAQ,GAAIjB,MAAM,CAACQ,KAAK,CAACuB,KAAK,CAACf,GAAG,EAAE;UAAEkB,QAAQ,EAAE;QAAM,CAAC,CAAC,CAACC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;MAC1F,OAAO;QACL3B,KAAK,CAACuB,KAAK,CAACd,SAAQ,GAAI,EAAE;MAC5B;IACF,CAAC,EAAE;MAACmB,SAAS,EAAE;IAAI,CAAC,CAAC;IAErB,MAAMC,KAAI,GAAI,MAAM;MAClB7B,KAAK,CAACuB,KAAI,GAAI,CAAC,CAAC;MAChBxB,OAAO,CAACwB,KAAI,GAAI,IAAI;IACtB,CAAC;IAED,MAAMO,MAAK,GAAKC,MAAM,IAAK;MACzB/B,KAAK,CAACuB,KAAI,GAAIzB,MAAM,CAAC0B,IAAI,CAACQ,IAAI,CAACD,MAAM,CAAC;MACtChC,OAAO,CAACwB,KAAI,GAAI,IAAI;IACtB,CAAC;IAED,MAAMU,QAAO,GAAKF,MAAM,IAAK;MAC3BxC,KAAK,CAAC2C,MAAM,CAAC,+BAA8B,GAAIH,MAAM,CAAC9B,EAAE,CAAC,CAACkC,IAAI,CAAEC,QAAQ,IAAK;QAC3E,MAAMC,IAAG,GAAID,QAAQ,CAACC,IAAI;QAC1B,IAAIA,IAAI,CAACC,OAAO,EAAE;UAChBhD,YAAY,CAACgD,OAAO,CAAC;YAACC,WAAW,EAAE;UAAO,CAAC,CAAC;UAC5CC,WAAW,CAAC;YACVC,IAAI,EAAE3B,UAAU,CAACS,KAAK,CAACP,OAAO;YAC9B0B,IAAI,EAAE5B,UAAU,CAACS,KAAK,CAACN;UACzB,CAAC,CAAC;QACJ,OAAO;UACL3B,YAAY,CAACqD,KAAK,CAAC;YAACJ,WAAW,EAAEF,IAAI,CAACO;UAAO,CAAC,CAAC;QACjD;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,QAAO,GAAI,MAAM;MACrBtD,KAAK,CAACuD,IAAI,CAAC,4BAA4B,EAAE9C,KAAK,CAACuB,KAAK,CAAC,CAACY,IAAI,CAAEC,QAAQ,IAAK;QACvE,IAAIC,IAAG,GAAID,QAAQ,CAACC,IAAI;QACxB,IAAIA,IAAI,CAACC,OAAO,EAAE;UAChBhD,YAAY,CAACgD,OAAO,CAAC;YAACC,WAAW,EAAE;UAAO,CAAC,CAAC;UAC5CxC,OAAO,CAACwB,KAAI,GAAI,KAAK;UACrBiB,WAAW,CAAC;YACVC,IAAI,EAAE3B,UAAU,CAACS,KAAK,CAACP,OAAO;YAC9B0B,IAAI,EAAE5B,UAAU,CAACS,KAAK,CAACN;UACzB,CAAC,CAAC;QACJ,OAAO;UACL3B,YAAY,CAACqD,KAAK,CAAC;YAACJ,WAAW,EAAEF,IAAI,CAACO;UAAO,CAAC,CAAC;QACjD;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMJ,WAAU,GAAKO,KAAK,IAAK;MAC7B,IAAI,CAACA,KAAK,EAAE;QACVA,KAAI,GAAI;UACNN,IAAI,EAAE,CAAC;UACPC,IAAI,EAAE5B,UAAU,CAACS,KAAK,CAACN;QACzB,CAAC;MACH;MACAC,OAAO,CAACK,KAAI,GAAI,IAAI;MACpBhC,KAAK,CAACyD,GAAG,CAAC,kCAAkC,EAAE;QAC5CC,MAAM,EAAE;UACNR,IAAI,EAAEM,KAAK,CAACN,IAAI;UAChBC,IAAI,EAAEK,KAAK,CAACL;QACd;MACF,CAAC,CAAC,CAACP,IAAI,CAAEC,QAAQ,IAAK;QACpBlB,OAAO,CAACK,KAAI,GAAI,KAAK;QACrB,IAAIc,IAAG,GAAID,QAAQ,CAACC,IAAI;QACxB,IAAIA,IAAI,CAACC,OAAO,EAAE;UAChBzB,MAAM,CAACU,KAAI,GAAIc,IAAI,CAACa,OAAO,CAACC,IAAI;UAChC;UACArC,UAAU,CAACS,KAAK,CAACP,OAAM,GAAI+B,KAAK,CAACN,IAAI;UACrC3B,UAAU,CAACS,KAAK,CAACR,KAAI,GAAIsB,IAAI,CAACa,OAAO,CAACnC,KAAK;QAC7C,OAAO;UACLzB,YAAY,CAACqD,KAAK,CAAC;YAACJ,WAAW,EAAEF,IAAI,CAACO;UAAO,CAAC,CAAC;QACjD;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMQ,iBAAgB,GAAKtC,UAAU,IAAK;MACxC;MACA0B,WAAW,CAAC;QACVC,IAAI,EAAE3B,UAAU,CAACE,OAAO;QACxB0B,IAAI,EAAE5B,UAAU,CAACG;MACnB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMoC,OAAM,GAAKtB,MAAM,IAAK;MAC1Bb,OAAO,CAACK,KAAI,GAAI,IAAI;MACpBhC,KAAK,CAACyD,GAAG,CAAC,iCAAgC,GAAIjB,MAAM,CAAC5B,IAAI,CAAC,CAACgC,IAAI,CAAEC,QAAQ,IAAK;QAC5ElB,OAAO,CAACK,KAAI,GAAI,KAAK;QACrB,MAAMc,IAAG,GAAID,QAAQ,CAACC,IAAI;QAC1B,IAAIA,IAAI,CAACC,OAAO,EAAE;UAChBhD,YAAY,CAACgD,OAAO,CAAC;YAACC,WAAW,EAAE;UAAO,CAAC,CAAC;QAC9C,OAAO;UACLjD,YAAY,CAACqD,KAAK,CAAC;YAACJ,WAAW,EAAEF,IAAI,CAACO;UAAO,CAAC,CAAC;QACjD;MACF,CAAC,CAAC;IACJ,CAAC;IAEDxD,SAAS,CAAC,MAAM;MACdoD,WAAW,CAAC;QACVC,IAAI,EAAE,CAAC;QACPC,IAAI,EAAE5B,UAAU,CAACS,KAAK,CAACN;MACzB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO;MACLpB,gBAAgB;MAChBG,KAAK;MACLD,OAAO;MACPc,MAAM;MACNC,UAAU;MACVK,OAAO;MACPiC,iBAAiB;MACjBZ,WAAW;MACXtB,OAAO;MACPW,KAAK;MACLgB,QAAQ;MACRf,MAAM;MACNG,QAAQ;MACRoB;IACF,CAAC;EACH;AACF,CAAC,CAAC","names":["defineComponent","ref","onMounted","watch","notification","axios","pinyin","StationSelectView","name","components","setup","TRAIN_TYPE_ARRAY","window","visible","train","id","undefined","code","type","start","startPinyin","startTime","end","endPinyin","endTime","createTime","updateTime","trains","pagination","total","current","pageSize","loading","columns","title","dataIndex","key","value","Tool","isNotEmpty","toneType","replaceAll","immediate","onAdd","onEdit","record","copy","onDelete","delete","then","response","data","success","description","handleQuery","page","size","error","message","handleOk","post","param","get","params","content","list","handleTableChange","genSeat"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\base\\train.vue"],"sourcesContent":["<template>\n  <p>\n    <a-space>\n      <a-button type=\"primary\" @click=\"handleQuery()\">刷新</a-button>\n      <a-button type=\"primary\" @click=\"onAdd\">新增</a-button>\n    </a-space>\n  </p>\n  <a-table :dataSource=\"trains\"\n           :columns=\"columns\"\n           :pagination=\"pagination\"\n           @change=\"handleTableChange\"\n           :loading=\"loading\">\n    <template #bodyCell=\"{ column, record }\">\n      <template v-if=\"column.dataIndex === 'operation'\">\n        <a-space>\n          <a-popconfirm\n              title=\"删除后不可恢复，确认删除?\"\n              @confirm=\"onDelete(record)\"\n              ok-text=\"确认\" cancel-text=\"取消\">\n            <a style=\"color: red\">删除</a>\n          </a-popconfirm>\n          <a @click=\"onEdit(record)\">编辑</a>\n          <a-popconfirm\n              title=\"生成座位将删除已有记录，确认生成座位?\"\n              @confirm=\"genSeat(record)\"\n              ok-text=\"确认\" cancel-text=\"取消\">\n            <a>生成座位</a>\n          </a-popconfirm>\n        </a-space>\n      </template>\n      <template v-else-if=\"column.dataIndex === 'type'\">\n        <span v-for=\"item in TRAIN_TYPE_ARRAY\" :key=\"item.code\">\n          <span v-if=\"item.code === record.type\">\n            {{item.desc}}\n          </span>\n        </span>\n      </template>\n    </template>\n  </a-table>\n  <a-modal v-model:visible=\"visible\" title=\"车次\" @ok=\"handleOk\"\n           ok-text=\"确认\" cancel-text=\"取消\">\n    <a-form :model=\"train\" :label-col=\"{span: 4}\" :wrapper-col=\"{ span: 20 }\">\n      <a-form-item label=\"车次编号\">\n        <a-input v-model:value=\"train.code\" :disabled=\"!!train.id\"/>\n      </a-form-item>\n      <a-form-item label=\"车次类型\">\n        <a-select v-model:value=\"train.type\">\n          <a-select-option v-for=\"item in TRAIN_TYPE_ARRAY\" :key=\"item.code\" :value=\"item.code\">\n            {{item.desc}}\n          </a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item label=\"始发站\">\n        <station-select-view v-model=\"train.start\"></station-select-view>\n      </a-form-item>\n      <a-form-item label=\"始发站拼音\">\n        <a-input v-model:value=\"train.startPinyin\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"出发时间\">\n        <a-time-picker v-model:value=\"train.startTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" />\n      </a-form-item>\n      <a-form-item label=\"终点站\">\n        <station-select-view v-model=\"train.end\"></station-select-view>\n      </a-form-item>\n      <a-form-item label=\"终点站拼音\">\n        <a-input v-model:value=\"train.endPinyin\" disabled/>\n      </a-form-item>\n      <a-form-item label=\"到站时间\">\n        <a-time-picker v-model:value=\"train.endTime\" valueFormat=\"HH:mm:ss\" placeholder=\"请选择时间\" />\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted, watch } from 'vue';\nimport {notification} from \"ant-design-vue\";\nimport axios from \"axios\";\nimport {pinyin} from \"pinyin-pro\";\nimport StationSelectView from \"@/components/station-select\";\n\nexport default defineComponent({\n  name: \"train-view\",\n  components: {StationSelectView},\n  setup() {\n    const TRAIN_TYPE_ARRAY = window.TRAIN_TYPE_ARRAY;\n    const visible = ref(false);\n    let train = ref({\n      id: undefined,\n      code: undefined,\n      type: undefined,\n      start: undefined,\n      startPinyin: undefined,\n      startTime: undefined,\n      end: undefined,\n      endPinyin: undefined,\n      endTime: undefined,\n      createTime: undefined,\n      updateTime: undefined,\n    });\n    const trains = ref([]);\n    // 分页的三个属性名是固定的\n    const pagination = ref({\n      total: 0,\n      current: 1,\n      pageSize: 10,\n    });\n    let loading = ref(false);\n    const columns = [\n    {\n      title: '车次编号',\n      dataIndex: 'code',\n      key: 'code',\n    },\n    {\n      title: '车次类型',\n      dataIndex: 'type',\n      key: 'type',\n    },\n    {\n      title: '始发站',\n      dataIndex: 'start',\n      key: 'start',\n    },\n    {\n      title: '始发站拼音',\n      dataIndex: 'startPinyin',\n      key: 'startPinyin',\n    },\n    {\n      title: '出发时间',\n      dataIndex: 'startTime',\n      key: 'startTime',\n    },\n    {\n      title: '终点站',\n      dataIndex: 'end',\n      key: 'end',\n    },\n    {\n      title: '终点站拼音',\n      dataIndex: 'endPinyin',\n      key: 'endPinyin',\n    },\n    {\n      title: '到站时间',\n      dataIndex: 'endTime',\n      key: 'endTime',\n    },\n    {\n      title: '操作',\n      dataIndex: 'operation'\n    }\n    ];\n\n    watch(() => train.value.start, ()=>{\n      if (Tool.isNotEmpty(train.value.start)) {\n        train.value.startPinyin = pinyin(train.value.start, { toneType: 'none'}).replaceAll(\" \", \"\");\n      } else {\n        train.value.startPinyin = \"\";\n      }\n    }, {immediate: true});\n    watch(() => train.value.end, ()=>{\n      if (Tool.isNotEmpty(train.value.end)) {\n        train.value.endPinyin = pinyin(train.value.end, { toneType: 'none'}).replaceAll(\" \", \"\");\n      } else {\n        train.value.endPinyin = \"\";\n      }\n    }, {immediate: true});\n\n    const onAdd = () => {\n      train.value = {};\n      visible.value = true;\n    };\n\n    const onEdit = (record) => {\n      train.value = window.Tool.copy(record);\n      visible.value = true;\n    };\n\n    const onDelete = (record) => {\n      axios.delete(\"/business/admin/train/delete/\" + record.id).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"删除成功！\"});\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize,\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleOk = () => {\n      axios.post(\"/business/admin/train/save\", train.value).then((response) => {\n        let data = response.data;\n        if (data.success) {\n          notification.success({description: \"保存成功！\"});\n          visible.value = false;\n          handleQuery({\n            page: pagination.value.current,\n            size: pagination.value.pageSize\n          });\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleQuery = (param) => {\n      if (!param) {\n        param = {\n          page: 1,\n          size: pagination.value.pageSize\n        };\n      }\n      loading.value = true;\n      axios.get(\"/business/admin/train/query-list\", {\n        params: {\n          page: param.page,\n          size: param.size\n        }\n      }).then((response) => {\n        loading.value = false;\n        let data = response.data;\n        if (data.success) {\n          trains.value = data.content.list;\n          // 设置分页控件的值\n          pagination.value.current = param.page;\n          pagination.value.total = data.content.total;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleTableChange = (pagination) => {\n      // console.log(\"看看自带的分页参数都有啥：\" + pagination);\n      handleQuery({\n        page: pagination.current,\n        size: pagination.pageSize\n      });\n    };\n\n    const genSeat = (record) => {\n      loading.value = true;\n      axios.get(\"/business/admin/train/gen-seat/\" + record.code).then((response) => {\n        loading.value = false;\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"生成成功！\"});\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    onMounted(() => {\n      handleQuery({\n        page: 1,\n        size: pagination.value.pageSize\n      });\n    });\n\n    return {\n      TRAIN_TYPE_ARRAY,\n      train,\n      visible,\n      trains,\n      pagination,\n      columns,\n      handleTableChange,\n      handleQuery,\n      loading,\n      onAdd,\n      handleOk,\n      onEdit,\n      onDelete,\n      genSeat\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}