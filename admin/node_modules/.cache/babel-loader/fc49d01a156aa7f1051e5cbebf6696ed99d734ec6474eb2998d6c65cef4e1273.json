{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"a\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"删除\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.handleQuery())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"刷新\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _ctx.onAdd\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"新增\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: _ctx.stations,\n    columns: _ctx.columns,\n    pagination: _ctx.pagination,\n    onChange: _ctx.handleTableChange,\n    loading: _ctx.loading\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createBlock(_component_a_space, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_popconfirm, {\n        title: \"删除后不可恢复，确认删除?\",\n        onConfirm: $event => _ctx.onDelete(record),\n        \"ok-text\": \"确认\",\n        \"cancel-text\": \"取消\"\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), _createElementVNode(\"a\", {\n        onClick: $event => _ctx.onEdit(record)\n      }, \"编辑\", 8 /* PROPS */, _hoisted_2)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\", \"pagination\", \"onChange\", \"loading\"]), _createVNode(_component_a_modal, {\n    visible: _ctx.visible,\n    \"onUpdate:visible\": _cache[4] || (_cache[4] = $event => _ctx.visible = $event),\n    title: \"车站\",\n    onOk: _ctx.handleOk,\n    \"ok-text\": \"确认\",\n    \"cancel-text\": \"取消\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      model: _ctx.station,\n      \"label-col\": {\n        span: 4\n      },\n      \"wrapper-col\": {\n        span: 20\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"站名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.station.name,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.station.name = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站名拼音\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.station.namePinyin,\n          \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.station.namePinyin = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"站名拼音首字母\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: _ctx.station.namePy,\n          \"onUpdate:value\": _cache[3] || (_cache[3] = $event => _ctx.station.namePy = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"onOk\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","style","_createElementBlock","_Fragment","_createVNode","_component_a_space","default","_withCtx","_component_a_button","type","onClick","_cache","$event","_ctx","handleQuery","_createTextVNode","_","onAdd","_component_a_table","dataSource","stations","columns","pagination","onChange","handleTableChange","loading","bodyCell","column","record","dataIndex","_createBlock","key","_component_a_popconfirm","title","onConfirm","onDelete","_hoisted_1","onEdit","_hoisted_2","_createCommentVNode","_component_a_modal","visible","onOk","handleOk","_component_a_form","model","station","span","_component_a_form_item","label","_component_a_input","value","name","namePinyin","namePy"],"sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\station.vue"],"sourcesContent":["<template>\r\n  <p>\r\n    <a-space>\r\n      <a-button type=\"primary\" @click=\"handleQuery()\">刷新</a-button>\r\n      <a-button type=\"primary\" @click=\"onAdd\">新增</a-button>\r\n    </a-space>\r\n  </p>\r\n  <a-table :dataSource=\"stations\"\r\n           :columns=\"columns\"\r\n           :pagination=\"pagination\"\r\n           @change=\"handleTableChange\"\r\n           :loading=\"loading\">\r\n    <template #bodyCell=\"{ column, record }\">\r\n      <template v-if=\"column.dataIndex === 'operation'\">\r\n          <a-space>\r\n            <a-popconfirm\r\n                    title=\"删除后不可恢复，确认删除?\"\r\n                    @confirm=\"onDelete(record)\"\r\n                    ok-text=\"确认\" cancel-text=\"取消\">\r\n              <a style=\"color: red\">删除</a>\r\n            </a-popconfirm>\r\n            <a @click=\"onEdit(record)\">编辑</a>\r\n          </a-space>\r\n      </template>\r\n    </template>\r\n  </a-table>\r\n    <a-modal v-model:visible=\"visible\" title=\"车站\" @ok=\"handleOk\"\r\n             ok-text=\"确认\" cancel-text=\"取消\">\r\n      <a-form :model=\"station\" :label-col=\"{span: 4}\" :wrapper-col=\"{ span: 20 }\">\r\n            <a-form-item label=\"站名\">\r\n                <a-input v-model:value=\"station.name\" />\r\n            </a-form-item>\r\n            <a-form-item label=\"站名拼音\">\r\n                <a-input v-model:value=\"station.namePinyin\" />\r\n            </a-form-item>\r\n            <a-form-item label=\"站名拼音首字母\">\r\n                <a-input v-model:value=\"station.namePy\" />\r\n            </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { defineComponent, ref, onMounted } from 'vue';\r\n  import {notification} from \"ant-design-vue\";\r\n  import axios from \"axios\";\r\n\r\n  export default defineComponent({\r\n    name: \"station-view\",\r\n    setup() {\r\n      const visible = ref(false);\r\n      let station = ref({\r\n        id: undefined,\r\n        name: undefined,\r\n        namePinyin: undefined,\r\n        namePy: undefined,\r\n        createTime: undefined,\r\n        updateTime: undefined,\r\n      });\r\n      const stations = ref([]);\r\n      // 分页的三个属性名是固定的\r\n      const pagination = ref({\r\n        total: 0,\r\n        current: 1,\r\n        pageSize: 10,\r\n      });\r\n      let loading = ref(false);\r\n      const columns = [\r\n        {\r\n          title: '站名',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n        },\r\n        {\r\n          title: '站名拼音',\r\n          dataIndex: 'namePinyin',\r\n          key: 'namePinyin',\r\n        },\r\n        {\r\n          title: '站名拼音首字母',\r\n          dataIndex: 'namePy',\r\n          key: 'namePy',\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'operation'\r\n        }\r\n      ];\r\n\r\n      const onAdd = () => {\r\n        station.value = {};\r\n        visible.value = true;\r\n      };\r\n\r\n      const onEdit = (record) => {\r\n        station.value = window.Tool.copy(record);\r\n        visible.value = true;\r\n      };\r\n\r\n      const onDelete = (record) => {\r\n        axios.delete(\"/admin/station/delete/\" + record.id).then((response) => {\r\n          const data = response.data;\r\n          if (data.success) {\r\n            notification.success({description: \"删除成功！\"});\r\n            handleQuery({\r\n              page: pagination.value.current,\r\n              size: pagination.value.pageSize,\r\n            });\r\n          } else {\r\n            notification.error({description: data.message});\r\n          }\r\n        });\r\n      };\r\n\r\n      const handleOk = () => {\r\n        axios.post(\"/admin/station/save\", station.value).then((response) => {\r\n          let data = response.data;\r\n          if (data.success) {\r\n            notification.success({description: \"保存成功！\"});\r\n            visible.value = false;\r\n            handleQuery({\r\n              page: pagination.value.current,\r\n              size: pagination.value.pageSize\r\n            });\r\n          } else {\r\n            notification.error({description: data.message});\r\n          }\r\n        });\r\n      };\r\n\r\n      const handleQuery = (param) => {\r\n        if (!param) {\r\n          param = {\r\n            page: 1,\r\n            size: pagination.value.pageSize\r\n          };\r\n        }\r\n        loading.value = true;\r\n        axios.get(\"/admin/station/query-list\", {\r\n          params: {\r\n            page: param.page,\r\n            size: param.size\r\n          }\r\n        }).then((response) => {\r\n          loading.value = false;\r\n          let data = response.data;\r\n          if (data.success) {\r\n            stations.value = data.content.list;\r\n            // 设置分页控件的值\r\n            pagination.value.current = param.page;\r\n            pagination.value.total = data.content.total;\r\n          } else {\r\n            notification.error({description: data.message});\r\n          }\r\n        });\r\n      };\r\n\r\n      const handleTableChange = (pagination) => {\r\n        // console.log(\"看看自带的分页参数都有啥：\" + pagination);\r\n        handleQuery({\r\n          page: pagination.current,\r\n          size: pagination.pageSize\r\n        });\r\n      };\r\n\r\n      onMounted(() => {\r\n        handleQuery({\r\n          page: 1,\r\n          size: pagination.value.pageSize\r\n        });\r\n      });\r\n\r\n      return {\r\n        station,\r\n        visible,\r\n        stations,\r\n        pagination,\r\n        columns,\r\n        handleTableChange,\r\n        handleQuery,\r\n        loading,\r\n        onAdd,\r\n        handleOk,\r\n        onEdit,\r\n        onDelete\r\n      };\r\n    },\r\n  });\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}