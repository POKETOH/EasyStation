{"ast":null,"code":"import { defineComponent, onMounted, ref } from 'vue';\nimport axios from 'axios';\nimport { notification } from 'ant-design-vue';\nexport default defineComponent({\n  name: 'batch-job-view',\n  setup() {\n    const jobs = ref();\n    const loading = ref();\n    const columns = [{\n      title: '分组',\n      dataIndex: 'group'\n    }, {\n      title: '类名',\n      dataIndex: 'name'\n    }, {\n      title: '描述',\n      dataIndex: 'description'\n    }, {\n      title: '状态',\n      dataIndex: 'state'\n    }, {\n      title: '表达式',\n      dataIndex: 'cronExpression'\n    }, {\n      title: '上次时间',\n      dataIndex: 'preFireTime'\n    }, {\n      title: '下次时间',\n      dataIndex: 'nextFireTime'\n    }, {\n      title: '操作',\n      dataIndex: 'operation'\n    }];\n    const handleQuery = () => {\n      loading.value = true;\n      jobs.value = [];\n      axios.get('/batch/admin/job/query').then(response => {\n        loading.value = false;\n        const data = response.data;\n        if (data.success) {\n          jobs.value = data.content;\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n\n    // -------- 表单 ---------\n    const job = ref();\n    job.value = {};\n    const modalVisible = ref(false);\n    const modalLoading = ref(false);\n    const handleModalOk = () => {\n      modalLoading.value = true;\n      let url = \"add\";\n      if (job.value.state) {\n        url = \"reschedule\";\n      }\n      axios.post('/batch/admin/job/' + url, job.value).then(response => {\n        modalLoading.value = false;\n        const data = response.data;\n        if (data.success) {\n          modalVisible.value = false;\n          notification.success({\n            description: \"保存成功！\"\n          });\n          handleQuery();\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n\n    /**\n     * 新增\n     */\n    const handleAdd = () => {\n      modalVisible.value = true;\n      job.value = {\n        group: 'DEFAULT'\n      };\n    };\n\n    /**\n     * 编辑\n     */\n    const handleEdit = record => {\n      modalVisible.value = true;\n      job.value = Tool.copy(record);\n    };\n\n    /**\n     * 删除\n     */\n    const handleDelete = record => {\n      axios.post('/batch/admin/job/delete', {\n        name: record.name,\n        group: record.group\n      }).then(response => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({\n            description: \"删除成功！\"\n          });\n          handleQuery();\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n\n    /**\n     * 暂停\n     */\n    const handlePause = record => {\n      axios.post('/batch/admin/job/pause', {\n        name: record.name,\n        group: record.group\n      }).then(response => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({\n            description: \"暂停成功！\"\n          });\n          handleQuery();\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n\n    /**\n     * 重启\n     */\n    const handleResume = record => {\n      axios.post('/batch/admin/job/reschedule', record).then(response => {\n        modalLoading.value = false;\n        const data = response.data;\n        if (data.success) {\n          modalVisible.value = false;\n          notification.success({\n            description: \"重启成功！\"\n          });\n          handleQuery();\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n\n    /**\n     * 手动执行\n     */\n    const handleRun = record => {\n      axios.post('/batch/admin/job/run', record).then(response => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({\n            description: \"手动执行成功！\"\n          });\n        } else {\n          notification.error({\n            description: data.message\n          });\n        }\n      });\n    };\n    const getEnumValue = (key, obj) => {\n      return Tool.getEnumValue(key, obj);\n    };\n    onMounted(() => {\n      console.log('index mounted!');\n      handleQuery();\n    });\n    return {\n      columns,\n      jobs,\n      loading,\n      handleQuery,\n      handleAdd,\n      handleEdit,\n      handleDelete,\n      handleResume,\n      handlePause,\n      job,\n      modalVisible,\n      modalLoading,\n      handleModalOk,\n      getEnumValue,\n      handleRun\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["defineComponent","onMounted","ref","axios","notification","name","setup","jobs","loading","columns","title","dataIndex","handleQuery","value","get","then","response","data","success","content","error","description","message","job","modalVisible","modalLoading","handleModalOk","url","state","post","handleAdd","group","handleEdit","record","Tool","copy","handleDelete","handlePause","handleResume","handleRun","getEnumValue","key","obj","console","log"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\batch\\job.vue"],"sourcesContent":["<template>\n  <div class=\"job\">\n    <p>\n      <a-button type=\"primary\" @click=\"handleAdd()\">\n        新增\n      </a-button>&nbsp;\n      <a-button type=\"primary\" @click=\"handleQuery()\">\n        刷新\n      </a-button>\n    </p>\n    <a-table :dataSource=\"jobs\"\n             :columns=\"columns\"\n             :loading=\"loading\">\n      <template #bodyCell=\"{ column, record }\">\n        <template v-if=\"column.dataIndex === 'operation'\">\n          <a-space>\n            <a-popconfirm\n                title=\"手动执行会立即执行一次，确定执行？\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"handleRun(record)\"\n            >\n              <a-button type=\"primary\" size=\"small\">\n                手动执行\n              </a-button>\n            </a-popconfirm>\n            <a-popconfirm\n                title=\"确定重启？\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"handleResume(record)\"\n            >\n              <a-button v-show=\"record.state === 'PAUSED' || record.state === 'ERROR'\" type=\"primary\" size=\"small\">\n                重启\n              </a-button>\n            </a-popconfirm>\n            <a-popconfirm\n                title=\"确定暂停？\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"handlePause(record)\"\n            >\n              <a-button v-show=\"record.state === 'NORMAL' || record.state === 'BLOCKED'\" type=\"primary\" size=\"small\">\n                暂停\n              </a-button>\n            </a-popconfirm>\n            <a-button type=\"primary\" @click=\"handleEdit(record)\" size=\"small\">\n              编辑\n            </a-button>\n            <a-popconfirm\n                title=\"删除后不可恢复，确认删除?\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"handleDelete(record)\"\n            >\n              <a-button type=\"danger\" size=\"small\">\n                删除\n              </a-button>\n            </a-popconfirm>\n          </a-space>\n        </template>\n      </template>\n    </a-table>\n\n    <a-modal\n        title=\"用户\"\n        v-model:visible=\"modalVisible\"\n        :confirm-loading=\"modalLoading\"\n        @ok=\"handleModalOk\"\n    >\n      <a-form :model=\"job\" :label-col=\"{ span: 6 }\" :wrapper-col=\"{ span: 18 }\">\n        <a-form-item label=\"类名\">\n          <a-input v-model:value=\"job.name\" />\n        </a-form-item>\n        <a-form-item label=\"描述\">\n          <a-input v-model:value=\"job.description\" />\n        </a-form-item>\n        <a-form-item label=\"分组\">\n          <a-input v-model:value=\"job.group\" :disabled=\"!!job.state\"/>\n        </a-form-item>\n        <a-form-item label=\"表达式\">\n          <a-input v-model:value=\"job.cronExpression\" />\n          <div class=\"ant-alert ant-alert-success\">\n            每5秒执行一次：0/5 * * * * ?\n            <br>\n            每5分钟执行一次：* 0/5 * * * ?\n          </div>\n        </a-form-item>\n      </a-form>\n    </a-modal>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, ref } from 'vue';\nimport axios from 'axios';\nimport { notification } from 'ant-design-vue';\n\nexport default defineComponent({\n  name: 'batch-job-view',\n  setup () {\n    const jobs = ref();\n    const loading = ref();\n\n    const columns = [{\n      title: '分组',\n      dataIndex: 'group',\n    }, {\n      title: '类名',\n      dataIndex: 'name',\n    }, {\n      title: '描述',\n      dataIndex: 'description',\n    }, {\n      title: '状态',\n      dataIndex: 'state',\n    }, {\n      title: '表达式',\n      dataIndex: 'cronExpression',\n    }, {\n      title: '上次时间',\n      dataIndex: 'preFireTime',\n    }, {\n      title: '下次时间',\n      dataIndex: 'nextFireTime',\n    }, {\n      title: '操作',\n      dataIndex: 'operation'\n    }];\n\n    const handleQuery = () => {\n      loading.value = true;\n      jobs.value = [];\n      axios.get('/batch/admin/job/query').then((response) => {\n        loading.value = false;\n        const data = response.data;\n        if (data.success) {\n          jobs.value = data.content;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    // -------- 表单 ---------\n    const job = ref();\n    job.value = {};\n    const modalVisible = ref(false);\n    const modalLoading = ref(false);\n    const handleModalOk = () => {\n      modalLoading.value = true;\n      let url = \"add\";\n      if (job.value.state) {\n        url = \"reschedule\";\n      }\n      axios.post('/batch/admin/job/' + url, job.value).then((response) => {\n        modalLoading.value = false;\n        const data = response.data;\n        if (data.success) {\n          modalVisible.value = false;\n          notification.success({description: \"保存成功！\"});\n          handleQuery();\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    /**\n     * 新增\n     */\n    const handleAdd = () => {\n      modalVisible.value = true;\n      job.value = {\n        group: 'DEFAULT'\n      };\n    };\n\n    /**\n     * 编辑\n     */\n    const handleEdit = (record) => {\n      modalVisible.value = true;\n      job.value = Tool.copy(record);\n    };\n\n    /**\n     * 删除\n     */\n    const handleDelete = (record) => {\n      axios.post('/batch/admin/job/delete', {\n        name: record.name,\n        group: record.group\n      }).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"删除成功！\"});\n          handleQuery();\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    /**\n     * 暂停\n     */\n    const handlePause = (record) => {\n      axios.post('/batch/admin/job/pause', {\n        name: record.name,\n        group: record.group\n      }).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"暂停成功！\"});\n          handleQuery();\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    /**\n     * 重启\n     */\n    const handleResume = (record) => {\n      axios.post('/batch/admin/job/reschedule', record).then((response) => {\n        modalLoading.value = false;\n        const data = response.data;\n        if (data.success) {\n          modalVisible.value = false;\n          notification.success({description: \"重启成功！\"});\n          handleQuery();\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    /**\n     * 手动执行\n     */\n    const handleRun = (record) => {\n      axios.post('/batch/admin/job/run', record).then((response) => {\n        const data = response.data;\n        if (data.success) {\n          notification.success({description: \"手动执行成功！\"});\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const getEnumValue = (key, obj) => {\n      return Tool.getEnumValue(key, obj);\n    };\n\n    onMounted(() => {\n      console.log('index mounted!');\n      handleQuery();\n    });\n\n    return {\n      columns,\n      jobs,\n      loading,\n      handleQuery,\n\n      handleAdd,\n      handleEdit,\n      handleDelete,\n      handleResume,\n      handlePause,\n      job,\n      modalVisible,\n      modalLoading,\n      handleModalOk,\n      getEnumValue,\n      handleRun\n    };\n  }\n})\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}