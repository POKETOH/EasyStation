{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, [_createVNode(_component_a_space, null, {\n    default: _withCtx(() => [_createVNode(_component_a_button, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.handleQuery())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"刷新\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: _ctx.tickets,\n    columns: _ctx.columns,\n    pagination: _ctx.pagination,\n    onChange: _ctx.handleTableChange,\n    loading: _ctx.loading\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [], 64 /* STABLE_FRAGMENT */)) : column.dataIndex === 'seatCol' ? (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 1\n    }, _renderList(_ctx.SEAT_COL_ARRAY, item => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        key: item.code\n      }, [item.code === record.seatCol && item.type === record.seatType ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString(item.desc), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */)) : column.dataIndex === 'seatType' ? (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 2\n    }, _renderList(_ctx.SEAT_TYPE_ARRAY, item => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        key: item.code\n      }, [item.code === record.seatType ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(item.desc), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\", \"pagination\", \"onChange\", \"loading\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;;;;;;6DACEA,oBAKI,YAJFC,aAGUC;sBAFR,MAA6D,CAA7DD,aAA6DE;MAAnDC,IAAI,EAAC,SAAS;MAAEC,OAAK,sCAAEC,gBAAW;;wBAAI,MAAE,kBAAF,IAAE;;;;;QAItDL,aAuBUM;IAvBAC,UAAU,EAAEF,YAAO;IACnBG,OAAO,EAAEH,YAAO;IAChBI,UAAU,EAAEJ,eAAU;IACtBK,QAAM,EAAEL,sBAAiB;IACzBM,OAAO,EAAEN;;IACNO,QAAQ,WACjB,CACW;MAFUC,MAAM;MAAEC;IAAM,OACnBD,MAAM,CAACE,SAAS,kCAAhCC,oBACWC;MAAAC;IAAA,oCACUL,MAAM,CAACE,SAAS,oCACnCC,oBAIOC;MAAAC;IAAA,eAJcb,mBAAc,EAAtBc,IAAI;2BAAjBH,oBAIO;QAJ+BE,GAAG,EAAEC,IAAI,CAACC;UAClCD,IAAI,CAACC,IAAI,KAAKN,MAAM,CAACO,OAAO,IAAIF,IAAI,CAAChB,IAAI,KAAKW,MAAM,CAACQ,QAAQ,kBAAzEN,oBAEO,qCADHG,IAAI,CAACI,IAAI;qCAIIV,MAAM,CAACE,SAAS,qCACnCC,oBAIOC;MAAAC;IAAA,eAJcb,oBAAe,EAAvBc,IAAI;2BAAjBH,oBAIO;QAJgCE,GAAG,EAAEC,IAAI,CAACC;UACnCD,IAAI,CAACC,IAAI,KAAKN,MAAM,CAACQ,QAAQ,kBAAzCN,oBAEO,qCADHG,IAAI,CAACI,IAAI","names":["_createElementVNode","_createVNode","_component_a_space","_component_a_button","type","onClick","_ctx","_component_a_table","dataSource","columns","pagination","onChange","loading","bodyCell","column","record","dataIndex","_createElementBlock","_Fragment","key","item","code","seatCol","seatType","desc"],"sourceRoot":"","sources":["E:\\Desktop\\projectCode\\12306\\train\\admin\\src\\views\\main\\member\\ticket.vue"],"sourcesContent":["<template>\n  <p>\n    <a-space>\n      <a-button type=\"primary\" @click=\"handleQuery()\">刷新</a-button>\n\n    </a-space>\n  </p>\n  <a-table :dataSource=\"tickets\"\n           :columns=\"columns\"\n           :pagination=\"pagination\"\n           @change=\"handleTableChange\"\n           :loading=\"loading\">\n    <template #bodyCell=\"{ column, record }\">\n      <template v-if=\"column.dataIndex === 'operation'\">\n      </template>\n      <template v-else-if=\"column.dataIndex === 'seatCol'\">\n        <span v-for=\"item in SEAT_COL_ARRAY\" :key=\"item.code\">\n          <span v-if=\"item.code === record.seatCol && item.type === record.seatType\">\n            {{item.desc}}\n          </span>\n        </span>\n      </template>\n      <template v-else-if=\"column.dataIndex === 'seatType'\">\n        <span v-for=\"item in SEAT_TYPE_ARRAY\" :key=\"item.code\">\n          <span v-if=\"item.code === record.seatType\">\n            {{item.desc}}\n          </span>\n        </span>\n      </template>\n    </template>\n  </a-table>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from 'vue';\nimport {notification} from \"ant-design-vue\";\nimport axios from \"axios\";\n\nexport default defineComponent({\n  name: \"ticket-view\",\n  setup() {\n    const SEAT_COL_ARRAY = window.SEAT_COL_ARRAY;\n    const SEAT_TYPE_ARRAY = window.SEAT_TYPE_ARRAY;\n    const visible = ref(false);\n    let ticket = ref({\n      id: undefined,\n      memberId: undefined,\n      passengerId: undefined,\n      passengerName: undefined,\n      trainDate: undefined,\n      trainCode: undefined,\n      carriageIndex: undefined,\n      seatRow: undefined,\n      seatCol: undefined,\n      startStation: undefined,\n      startTime: undefined,\n      endStation: undefined,\n      endTime: undefined,\n      seatType: undefined,\n      createTime: undefined,\n      updateTime: undefined,\n    });\n    const tickets = ref([]);\n    // 分页的三个属性名是固定的\n    const pagination = ref({\n      total: 0,\n      current: 1,\n      pageSize: 10,\n    });\n    let loading = ref(false);\n    const columns = [\n    {\n      title: '乘客姓名',\n      dataIndex: 'passengerName',\n      key: 'passengerName',\n    },\n    {\n      title: '日期',\n      dataIndex: 'trainDate',\n      key: 'trainDate',\n    },\n    {\n      title: '车次编号',\n      dataIndex: 'trainCode',\n      key: 'trainCode',\n    },\n    {\n      title: '箱序',\n      dataIndex: 'carriageIndex',\n      key: 'carriageIndex',\n    },\n    {\n      title: '排号',\n      dataIndex: 'seatRow',\n      key: 'seatRow',\n    },\n    {\n      title: '列号',\n      dataIndex: 'seatCol',\n      key: 'seatCol',\n    },\n    {\n      title: '出发站',\n      dataIndex: 'startStation',\n      key: 'startStation',\n    },\n    {\n      title: '出发时间',\n      dataIndex: 'startTime',\n      key: 'startTime',\n    },\n    {\n      title: '到达站',\n      dataIndex: 'endStation',\n      key: 'endStation',\n    },\n    {\n      title: '到站时间',\n      dataIndex: 'endTime',\n      key: 'endTime',\n    },\n    {\n      title: '座位类型',\n      dataIndex: 'seatType',\n      key: 'seatType',\n    },\n    ];\n\n\n    const handleQuery = (param) => {\n      if (!param) {\n        param = {\n          page: 1,\n          size: pagination.value.pageSize\n        };\n      }\n      loading.value = true;\n      axios.get(\"/member/admin/ticket/query-list\", {\n        params: {\n          page: param.page,\n          size: param.size\n        }\n      }).then((response) => {\n        loading.value = false;\n        let data = response.data;\n        if (data.success) {\n          tickets.value = data.content.list;\n          // 设置分页控件的值\n          pagination.value.current = param.page;\n          pagination.value.total = data.content.total;\n        } else {\n          notification.error({description: data.message});\n        }\n      });\n    };\n\n    const handleTableChange = (page) => {\n      // console.log(\"看看自带的分页参数都有啥：\" + JSON.stringify(page));\n      pagination.value.pageSize = page.pageSize;\n      handleQuery({\n        page: page.current,\n        size: page.pageSize\n      });\n    };\n\n    onMounted(() => {\n      handleQuery({\n        page: 1,\n        size: pagination.value.pageSize\n      });\n    });\n\n    return {\n      SEAT_COL_ARRAY,\n      SEAT_TYPE_ARRAY,\n      ticket,\n      visible,\n      tickets,\n      pagination,\n      columns,\n      handleTableChange,\n      handleQuery,\n      loading,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}